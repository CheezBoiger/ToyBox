Terminals unused in grammar

   _break
   _else
   _false
   _for
   _if
   _println
   _return
   _true
   _void
   _while
   _greatereequal
   _epsilon


Rules useless in parser due to conflicts

   60 Lvalue: Lvalue _assignop Expr


State 49 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 70 conflicts: 3 shift/reduce
State 118 conflicts: 19 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: Decl

    2 Decl: %empty
    3     | VariableDecl
    4     | ClassDecl
    5     | InterfaceDecl
    6     | FunctionDecl

    7 VariableDecl: Variable _semicolon

    8 Variable: Type _id

    9 Type: _double
   10     | _int
   11     | _boolean
   12     | _string
   13     | Type _leftbracket _rightbracket
   14     | _id

   15 ClassDecl: _class _id ExtendClass ImplementClass _leftbrace Field _rightbrace Decl

   16 ExtendClass: _extends _id
   17            | %empty

   18 ImplementClass: _implements ImplInterface
   19               | %empty

   20 ImplInterface: _id
   21              | _id _comma ImplInterface

   22 InterfaceDecl: _interface _id _leftbrace Prototype _rightbrace Decl

   23 Prototype: Type _id _leftparen Formals _rightparen _semicolon Prototype
   24          | %empty

   25 Formals: Variable
   26        | Variable _comma Formals
   27        | %empty

   28 Field: VariableDecl
   29      | %empty

   30 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock Decl

   31 StmtBlock: _leftparen StmtDeclares Stmt _rightparen

   32 StmtDeclares: VariableDecl
   33             | %empty

   34 Stmt: Expr _semicolon Stmt
   35     | %empty

   36 Expr: Lvalue _assignop Expr
   37     | Constant
   38     | Lvalue
   39     | Call
   40     | Expr _plus Expr
   41     | Expr _minus Expr
   42     | Expr _multiplication Expr
   43     | Expr _division Expr
   44     | Expr _mod Expr
   45     | _minus Expr
   46     | Expr _less Expr
   47     | Expr _lessequal Expr
   48     | Expr _greater Expr
   49     | Expr _greaterequal Expr
   50     | Expr _equal Expr
   51     | Expr _notequal Expr
   52     | Expr _and Expr
   53     | Expr _or Expr
   54     | _not Expr
   55     | _readln _leftparen _rightparen
   56     | _newarray _leftparen _intconstant _comma Type _rightparen

   57 Lvalue: _id
   58       | Lvalue _leftbracket Expr _rightbracket
   59       | Lvalue _period _id
   60       | Lvalue _assignop Expr

   61 Call: _id _leftparen Actuals _rightparen
   62     | _id _period _id _leftparen Actuals _rightparen

   63 Actuals: Expr

   64 Constant: _intconstant
   65         | _doubleconstant
   66         | _stringconstant
   67         | _booleanconstant


Terminals, with rules where they appear

$end (0) 0
error (256)
_boolean (258) 11
_break (259)
_class (260) 15
_double (261) 9
_else (262)
_extends (263) 16
_false (264)
_for (265)
_if (266)
_implements (267) 18
_int (268) 10
_interface (269) 22
_newarray (270) 56
_println (271)
_readln (272) 55
_return (273)
_string (274) 12
_true (275)
_void (276)
_while (277)
_plus (278) 40
_minus (279) 41 45
_multiplication (280) 42
_division (281) 43
_mod (282) 44
_less (283) 46
_lessequal (284) 47
_greater (285) 48
_greatereequal (286)
_equal (287) 50
_notequal (288) 51
_and (289) 52
_or (290) 53
_not (291) 54
_assignop (292) 36 60
_semicolon (293) 7 23 34
_comma (294) 21 26 56
_period (295) 59 62
_leftparen (296) 23 30 31 55 56 61 62
_rightparen (297) 23 30 31 55 56 61 62
_leftbracket (298) 13 58
_rightbracket (299) 13 58
_leftbrace (300) 15 22
_rightbrace (301) 15 22
_intconstant (302) 56 64
_doubleconstant (303) 65
_stringconstant (304) 66
_booleanconstant (305) 67
_id (306) 8 14 15 16 20 21 22 23 30 57 59 61 62
_epsilon (307)
_greaterequal (308) 49


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
Program (55)
    on left: 1, on right: 0
Decl (56)
    on left: 2 3 4 5 6, on right: 1 15 22 30
VariableDecl (57)
    on left: 7, on right: 3 28 32
Variable (58)
    on left: 8, on right: 7 25 26
Type (59)
    on left: 9 10 11 12 13 14, on right: 8 13 23 30 56
ClassDecl (60)
    on left: 15, on right: 4
ExtendClass (61)
    on left: 16 17, on right: 15
ImplementClass (62)
    on left: 18 19, on right: 15
ImplInterface (63)
    on left: 20 21, on right: 18 21
InterfaceDecl (64)
    on left: 22, on right: 5
Prototype (65)
    on left: 23 24, on right: 22 23
Formals (66)
    on left: 25 26 27, on right: 23 26 30
Field (67)
    on left: 28 29, on right: 15
FunctionDecl (68)
    on left: 30, on right: 6
StmtBlock (69)
    on left: 31, on right: 30
StmtDeclares (70)
    on left: 32 33, on right: 31
Stmt (71)
    on left: 34 35, on right: 31 34
Expr (72)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54 55 56, on right: 34 36 40 41 42 43 44 45 46 47 48 49 50 51 52
    53 54 58 60 63
Lvalue (73)
    on left: 57 58 59 60, on right: 36 38 58 59 60
Call (74)
    on left: 61 62, on right: 39
Actuals (75)
    on left: 63, on right: 61 62
Constant (76)
    on left: 64 65 66 67, on right: 37


State 0

    0 $accept: . Program $end

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _id         shift, and go to state 7

    $default  reduce using rule 2 (Decl)

    Program        go to state 8
    Decl           go to state 9
    VariableDecl   go to state 10
    Variable       go to state 11
    Type           go to state 12
    ClassDecl      go to state 13
    InterfaceDecl  go to state 14
    FunctionDecl   go to state 15


State 1

   11 Type: _boolean .

    $default  reduce using rule 11 (Type)


State 2

   15 ClassDecl: _class . _id ExtendClass ImplementClass _leftbrace Field _rightbrace Decl

    _id  shift, and go to state 16


State 3

    9 Type: _double .

    $default  reduce using rule 9 (Type)


State 4

   10 Type: _int .

    $default  reduce using rule 10 (Type)


State 5

   22 InterfaceDecl: _interface . _id _leftbrace Prototype _rightbrace Decl

    _id  shift, and go to state 17


State 6

   12 Type: _string .

    $default  reduce using rule 12 (Type)


State 7

   14 Type: _id .

    $default  reduce using rule 14 (Type)


State 8

    0 $accept: Program . $end

    $end  shift, and go to state 18


State 9

    1 Program: Decl .

    $default  reduce using rule 1 (Program)


State 10

    3 Decl: VariableDecl .

    $default  reduce using rule 3 (Decl)


State 11

    7 VariableDecl: Variable . _semicolon

    _semicolon  shift, and go to state 19


State 12

    8 Variable: Type . _id
   13 Type: Type . _leftbracket _rightbracket
   30 FunctionDecl: Type . _id _leftparen Formals _rightparen StmtBlock Decl

    _leftbracket  shift, and go to state 20
    _id           shift, and go to state 21


State 13

    4 Decl: ClassDecl .

    $default  reduce using rule 4 (Decl)


State 14

    5 Decl: InterfaceDecl .

    $default  reduce using rule 5 (Decl)


State 15

    6 Decl: FunctionDecl .

    $default  reduce using rule 6 (Decl)


State 16

   15 ClassDecl: _class _id . ExtendClass ImplementClass _leftbrace Field _rightbrace Decl

    _extends  shift, and go to state 22

    $default  reduce using rule 17 (ExtendClass)

    ExtendClass  go to state 23


State 17

   22 InterfaceDecl: _interface _id . _leftbrace Prototype _rightbrace Decl

    _leftbrace  shift, and go to state 24


State 18

    0 $accept: Program $end .

    $default  accept


State 19

    7 VariableDecl: Variable _semicolon .

    $default  reduce using rule 7 (VariableDecl)


State 20

   13 Type: Type _leftbracket . _rightbracket

    _rightbracket  shift, and go to state 25


State 21

    8 Variable: Type _id .
   30 FunctionDecl: Type _id . _leftparen Formals _rightparen StmtBlock Decl

    _leftparen  shift, and go to state 26

    $default  reduce using rule 8 (Variable)


State 22

   16 ExtendClass: _extends . _id

    _id  shift, and go to state 27


State 23

   15 ClassDecl: _class _id ExtendClass . ImplementClass _leftbrace Field _rightbrace Decl

    _implements  shift, and go to state 28

    $default  reduce using rule 19 (ImplementClass)

    ImplementClass  go to state 29


State 24

   22 InterfaceDecl: _interface _id _leftbrace . Prototype _rightbrace Decl

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    $default  reduce using rule 24 (Prototype)

    Type       go to state 30
    Prototype  go to state 31


State 25

   13 Type: Type _leftbracket _rightbracket .

    $default  reduce using rule 13 (Type)


State 26

   30 FunctionDecl: Type _id _leftparen . Formals _rightparen StmtBlock Decl

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    $default  reduce using rule 27 (Formals)

    Variable  go to state 32
    Type      go to state 33
    Formals   go to state 34


State 27

   16 ExtendClass: _extends _id .

    $default  reduce using rule 16 (ExtendClass)


State 28

   18 ImplementClass: _implements . ImplInterface

    _id  shift, and go to state 35

    ImplInterface  go to state 36


State 29

   15 ClassDecl: _class _id ExtendClass ImplementClass . _leftbrace Field _rightbrace Decl

    _leftbrace  shift, and go to state 37


State 30

   13 Type: Type . _leftbracket _rightbracket
   23 Prototype: Type . _id _leftparen Formals _rightparen _semicolon Prototype

    _leftbracket  shift, and go to state 20
    _id           shift, and go to state 38


State 31

   22 InterfaceDecl: _interface _id _leftbrace Prototype . _rightbrace Decl

    _rightbrace  shift, and go to state 39


State 32

   25 Formals: Variable .
   26        | Variable . _comma Formals

    _comma  shift, and go to state 40

    $default  reduce using rule 25 (Formals)


State 33

    8 Variable: Type . _id
   13 Type: Type . _leftbracket _rightbracket

    _leftbracket  shift, and go to state 20
    _id           shift, and go to state 41


State 34

   30 FunctionDecl: Type _id _leftparen Formals . _rightparen StmtBlock Decl

    _rightparen  shift, and go to state 42


State 35

   20 ImplInterface: _id .
   21              | _id . _comma ImplInterface

    _comma  shift, and go to state 43

    $default  reduce using rule 20 (ImplInterface)


State 36

   18 ImplementClass: _implements ImplInterface .

    $default  reduce using rule 18 (ImplementClass)


State 37

   15 ClassDecl: _class _id ExtendClass ImplementClass _leftbrace . Field _rightbrace Decl

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    $default  reduce using rule 29 (Field)

    VariableDecl  go to state 44
    Variable      go to state 11
    Type          go to state 33
    Field         go to state 45


State 38

   23 Prototype: Type _id . _leftparen Formals _rightparen _semicolon Prototype

    _leftparen  shift, and go to state 46


State 39

   22 InterfaceDecl: _interface _id _leftbrace Prototype _rightbrace . Decl

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _id         shift, and go to state 7

    $default  reduce using rule 2 (Decl)

    Decl           go to state 47
    VariableDecl   go to state 10
    Variable       go to state 11
    Type           go to state 12
    ClassDecl      go to state 13
    InterfaceDecl  go to state 14
    FunctionDecl   go to state 15


State 40

   26 Formals: Variable _comma . Formals

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    $default  reduce using rule 27 (Formals)

    Variable  go to state 32
    Type      go to state 33
    Formals   go to state 48


State 41

    8 Variable: Type _id .

    $default  reduce using rule 8 (Variable)


State 42

   30 FunctionDecl: Type _id _leftparen Formals _rightparen . StmtBlock Decl

    _leftparen  shift, and go to state 49

    StmtBlock  go to state 50


State 43

   21 ImplInterface: _id _comma . ImplInterface

    _id  shift, and go to state 35

    ImplInterface  go to state 51


State 44

   28 Field: VariableDecl .

    $default  reduce using rule 28 (Field)


State 45

   15 ClassDecl: _class _id ExtendClass ImplementClass _leftbrace Field . _rightbrace Decl

    _rightbrace  shift, and go to state 52


State 46

   23 Prototype: Type _id _leftparen . Formals _rightparen _semicolon Prototype

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    $default  reduce using rule 27 (Formals)

    Variable  go to state 32
    Type      go to state 33
    Formals   go to state 53


State 47

   22 InterfaceDecl: _interface _id _leftbrace Prototype _rightbrace Decl .

    $default  reduce using rule 22 (InterfaceDecl)


State 48

   26 Formals: Variable _comma Formals .

    $default  reduce using rule 26 (Formals)


State 49

   31 StmtBlock: _leftparen . StmtDeclares Stmt _rightparen

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    _id       [reduce using rule 33 (StmtDeclares)]
    $default  reduce using rule 33 (StmtDeclares)

    VariableDecl  go to state 54
    Variable      go to state 11
    Type          go to state 33
    StmtDeclares  go to state 55


State 50

   30 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock . Decl

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _id         shift, and go to state 7

    $default  reduce using rule 2 (Decl)

    Decl           go to state 56
    VariableDecl   go to state 10
    Variable       go to state 11
    Type           go to state 12
    ClassDecl      go to state 13
    InterfaceDecl  go to state 14
    FunctionDecl   go to state 15


State 51

   21 ImplInterface: _id _comma ImplInterface .

    $default  reduce using rule 21 (ImplInterface)


State 52

   15 ClassDecl: _class _id ExtendClass ImplementClass _leftbrace Field _rightbrace . Decl

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _id         shift, and go to state 7

    $default  reduce using rule 2 (Decl)

    Decl           go to state 57
    VariableDecl   go to state 10
    Variable       go to state 11
    Type           go to state 12
    ClassDecl      go to state 13
    InterfaceDecl  go to state 14
    FunctionDecl   go to state 15


State 53

   23 Prototype: Type _id _leftparen Formals . _rightparen _semicolon Prototype

    _rightparen  shift, and go to state 58


State 54

   32 StmtDeclares: VariableDecl .

    $default  reduce using rule 32 (StmtDeclares)


State 55

   31 StmtBlock: _leftparen StmtDeclares . Stmt _rightparen

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    $default  reduce using rule 35 (Stmt)

    Stmt      go to state 68
    Expr      go to state 69
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 56

   30 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock Decl .

    $default  reduce using rule 30 (FunctionDecl)


State 57

   15 ClassDecl: _class _id ExtendClass ImplementClass _leftbrace Field _rightbrace Decl .

    $default  reduce using rule 15 (ClassDecl)


State 58

   23 Prototype: Type _id _leftparen Formals _rightparen . _semicolon Prototype

    _semicolon  shift, and go to state 73


State 59

   56 Expr: _newarray . _leftparen _intconstant _comma Type _rightparen

    _leftparen  shift, and go to state 74


State 60

   55 Expr: _readln . _leftparen _rightparen

    _leftparen  shift, and go to state 75


State 61

   45 Expr: _minus . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 76
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 62

   54 Expr: _not . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 77
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 63

   64 Constant: _intconstant .

    $default  reduce using rule 64 (Constant)


State 64

   65 Constant: _doubleconstant .

    $default  reduce using rule 65 (Constant)


State 65

   66 Constant: _stringconstant .

    $default  reduce using rule 66 (Constant)


State 66

   67 Constant: _booleanconstant .

    $default  reduce using rule 67 (Constant)


State 67

   57 Lvalue: _id .
   61 Call: _id . _leftparen Actuals _rightparen
   62     | _id . _period _id _leftparen Actuals _rightparen

    _period     shift, and go to state 78
    _leftparen  shift, and go to state 79

    _period   [reduce using rule 57 (Lvalue)]
    $default  reduce using rule 57 (Lvalue)


State 68

   31 StmtBlock: _leftparen StmtDeclares Stmt . _rightparen

    _rightparen  shift, and go to state 80


State 69

   34 Stmt: Expr . _semicolon Stmt
   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr

    _plus            shift, and go to state 81
    _minus           shift, and go to state 82
    _multiplication  shift, and go to state 83
    _division        shift, and go to state 84
    _mod             shift, and go to state 85
    _less            shift, and go to state 86
    _lessequal       shift, and go to state 87
    _greater         shift, and go to state 88
    _equal           shift, and go to state 89
    _notequal        shift, and go to state 90
    _and             shift, and go to state 91
    _or              shift, and go to state 92
    _semicolon       shift, and go to state 93
    _greaterequal    shift, and go to state 94


State 70

   36 Expr: Lvalue . _assignop Expr
   38     | Lvalue .
   58 Lvalue: Lvalue . _leftbracket Expr _rightbracket
   59       | Lvalue . _period _id
   60       | Lvalue . _assignop Expr

    _assignop     shift, and go to state 95
    _period       shift, and go to state 96
    _leftbracket  shift, and go to state 97

    _assignop     [reduce using rule 38 (Expr)]
    _period       [reduce using rule 38 (Expr)]
    _leftbracket  [reduce using rule 38 (Expr)]
    $default      reduce using rule 38 (Expr)


State 71

   39 Expr: Call .

    $default  reduce using rule 39 (Expr)


State 72

   37 Expr: Constant .

    $default  reduce using rule 37 (Expr)


State 73

   23 Prototype: Type _id _leftparen Formals _rightparen _semicolon . Prototype

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    $default  reduce using rule 24 (Prototype)

    Type       go to state 30
    Prototype  go to state 98


State 74

   56 Expr: _newarray _leftparen . _intconstant _comma Type _rightparen

    _intconstant  shift, and go to state 99


State 75

   55 Expr: _readln _leftparen . _rightparen

    _rightparen  shift, and go to state 100


State 76

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   45     | _minus Expr .
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr

    _less          shift, and go to state 86
    _lessequal     shift, and go to state 87
    _greater       shift, and go to state 88
    _equal         shift, and go to state 89
    _notequal      shift, and go to state 90
    _and           shift, and go to state 91
    _or            shift, and go to state 92
    _greaterequal  shift, and go to state 94

    $default  reduce using rule 45 (Expr)


State 77

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr
   54     | _not Expr .

    _less          shift, and go to state 86
    _lessequal     shift, and go to state 87
    _greater       shift, and go to state 88
    _equal         shift, and go to state 89
    _notequal      shift, and go to state 90
    _and           shift, and go to state 91
    _or            shift, and go to state 92
    _greaterequal  shift, and go to state 94

    $default  reduce using rule 54 (Expr)


State 78

   62 Call: _id _period . _id _leftparen Actuals _rightparen

    _id  shift, and go to state 101


State 79

   61 Call: _id _leftparen . Actuals _rightparen

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 102
    Lvalue    go to state 70
    Call      go to state 71
    Actuals   go to state 103
    Constant  go to state 72


State 80

   31 StmtBlock: _leftparen StmtDeclares Stmt _rightparen .

    $default  reduce using rule 31 (StmtBlock)


State 81

   40 Expr: Expr _plus . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 104
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 82

   41 Expr: Expr _minus . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 105
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 83

   42 Expr: Expr _multiplication . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 106
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 84

   43 Expr: Expr _division . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 107
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 85

   44 Expr: Expr _mod . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 108
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 86

   46 Expr: Expr _less . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 109
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 87

   47 Expr: Expr _lessequal . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 110
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 88

   48 Expr: Expr _greater . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 111
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 89

   50 Expr: Expr _equal . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 112
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 90

   51 Expr: Expr _notequal . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 113
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 91

   52 Expr: Expr _and . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 114
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 92

   53 Expr: Expr _or . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 115
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 93

   34 Stmt: Expr _semicolon . Stmt

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    $default  reduce using rule 35 (Stmt)

    Stmt      go to state 116
    Expr      go to state 69
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 94

   49 Expr: Expr _greaterequal . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 117
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 95

   36 Expr: Lvalue _assignop . Expr
   60 Lvalue: Lvalue _assignop . Expr

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 118
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 96

   59 Lvalue: Lvalue _period . _id

    _id  shift, and go to state 119


State 97

   58 Lvalue: Lvalue _leftbracket . Expr _rightbracket

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 120
    Lvalue    go to state 70
    Call      go to state 71
    Constant  go to state 72


State 98

   23 Prototype: Type _id _leftparen Formals _rightparen _semicolon Prototype .

    $default  reduce using rule 23 (Prototype)


State 99

   56 Expr: _newarray _leftparen _intconstant . _comma Type _rightparen

    _comma  shift, and go to state 121


State 100

   55 Expr: _readln _leftparen _rightparen .

    $default  reduce using rule 55 (Expr)


State 101

   62 Call: _id _period _id . _leftparen Actuals _rightparen

    _leftparen  shift, and go to state 122


State 102

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr
   63 Actuals: Expr .

    _plus            shift, and go to state 81
    _minus           shift, and go to state 82
    _multiplication  shift, and go to state 83
    _division        shift, and go to state 84
    _mod             shift, and go to state 85
    _less            shift, and go to state 86
    _lessequal       shift, and go to state 87
    _greater         shift, and go to state 88
    _equal           shift, and go to state 89
    _notequal        shift, and go to state 90
    _and             shift, and go to state 91
    _or              shift, and go to state 92
    _greaterequal    shift, and go to state 94

    $default  reduce using rule 63 (Actuals)


State 103

   61 Call: _id _leftparen Actuals . _rightparen

    _rightparen  shift, and go to state 123


State 104

   40 Expr: Expr . _plus Expr
   40     | Expr _plus Expr .
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr

    _less          shift, and go to state 86
    _lessequal     shift, and go to state 87
    _greater       shift, and go to state 88
    _equal         shift, and go to state 89
    _notequal      shift, and go to state 90
    _and           shift, and go to state 91
    _or            shift, and go to state 92
    _greaterequal  shift, and go to state 94

    $default  reduce using rule 40 (Expr)


State 105

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   41     | Expr _minus Expr .
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr

    _less          shift, and go to state 86
    _lessequal     shift, and go to state 87
    _greater       shift, and go to state 88
    _equal         shift, and go to state 89
    _notequal      shift, and go to state 90
    _and           shift, and go to state 91
    _or            shift, and go to state 92
    _greaterequal  shift, and go to state 94

    $default  reduce using rule 41 (Expr)


State 106

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   42     | Expr _multiplication Expr .
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr

    _plus          shift, and go to state 81
    _minus         shift, and go to state 82
    _less          shift, and go to state 86
    _lessequal     shift, and go to state 87
    _greater       shift, and go to state 88
    _equal         shift, and go to state 89
    _notequal      shift, and go to state 90
    _and           shift, and go to state 91
    _or            shift, and go to state 92
    _greaterequal  shift, and go to state 94

    $default  reduce using rule 42 (Expr)


State 107

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   43     | Expr _division Expr .
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr

    _plus          shift, and go to state 81
    _minus         shift, and go to state 82
    _less          shift, and go to state 86
    _lessequal     shift, and go to state 87
    _greater       shift, and go to state 88
    _equal         shift, and go to state 89
    _notequal      shift, and go to state 90
    _and           shift, and go to state 91
    _or            shift, and go to state 92
    _greaterequal  shift, and go to state 94

    $default  reduce using rule 43 (Expr)


State 108

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   44     | Expr _mod Expr .
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr

    _plus          shift, and go to state 81
    _minus         shift, and go to state 82
    _less          shift, and go to state 86
    _lessequal     shift, and go to state 87
    _greater       shift, and go to state 88
    _equal         shift, and go to state 89
    _notequal      shift, and go to state 90
    _and           shift, and go to state 91
    _or            shift, and go to state 92
    _greaterequal  shift, and go to state 94

    $default  reduce using rule 44 (Expr)


State 109

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   46     | Expr _less Expr .
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr

    _equal     shift, and go to state 89
    _notequal  shift, and go to state 90
    _and       shift, and go to state 91
    _or        shift, and go to state 92

    $default  reduce using rule 46 (Expr)


State 110

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   47     | Expr _lessequal Expr .
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr

    _equal     shift, and go to state 89
    _notequal  shift, and go to state 90
    _and       shift, and go to state 91
    _or        shift, and go to state 92

    $default  reduce using rule 47 (Expr)


State 111

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   48     | Expr _greater Expr .
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr

    _equal     shift, and go to state 89
    _notequal  shift, and go to state 90
    _and       shift, and go to state 91
    _or        shift, and go to state 92

    $default  reduce using rule 48 (Expr)


State 112

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   50     | Expr _equal Expr .
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr

    _and  shift, and go to state 91
    _or   shift, and go to state 92

    $default  reduce using rule 50 (Expr)


State 113

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   51     | Expr _notequal Expr .
   52     | Expr . _and Expr
   53     | Expr . _or Expr

    _and  shift, and go to state 91
    _or   shift, and go to state 92

    $default  reduce using rule 51 (Expr)


State 114

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   52     | Expr _and Expr .
   53     | Expr . _or Expr

    _or  shift, and go to state 92

    $default  reduce using rule 52 (Expr)


State 115

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr
   53     | Expr _or Expr .

    $default  reduce using rule 53 (Expr)


State 116

   34 Stmt: Expr _semicolon Stmt .

    $default  reduce using rule 34 (Stmt)


State 117

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   49     | Expr _greaterequal Expr .
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr

    _equal     shift, and go to state 89
    _notequal  shift, and go to state 90
    _and       shift, and go to state 91
    _or        shift, and go to state 92

    $default  reduce using rule 49 (Expr)


State 118

   36 Expr: Lvalue _assignop Expr .
   40     | Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr
   60 Lvalue: Lvalue _assignop Expr .

    _plus            reduce using rule 36 (Expr)
    _plus            [reduce using rule 60 (Lvalue)]
    _minus           reduce using rule 36 (Expr)
    _minus           [reduce using rule 60 (Lvalue)]
    _multiplication  reduce using rule 36 (Expr)
    _multiplication  [reduce using rule 60 (Lvalue)]
    _division        reduce using rule 36 (Expr)
    _division        [reduce using rule 60 (Lvalue)]
    _mod             reduce using rule 36 (Expr)
    _mod             [reduce using rule 60 (Lvalue)]
    _less            reduce using rule 36 (Expr)
    _less            [reduce using rule 60 (Lvalue)]
    _lessequal       reduce using rule 36 (Expr)
    _lessequal       [reduce using rule 60 (Lvalue)]
    _greater         reduce using rule 36 (Expr)
    _greater         [reduce using rule 60 (Lvalue)]
    _equal           reduce using rule 36 (Expr)
    _equal           [reduce using rule 60 (Lvalue)]
    _notequal        reduce using rule 36 (Expr)
    _notequal        [reduce using rule 60 (Lvalue)]
    _and             reduce using rule 36 (Expr)
    _and             [reduce using rule 60 (Lvalue)]
    _or              reduce using rule 36 (Expr)
    _or              [reduce using rule 60 (Lvalue)]
    _assignop        reduce using rule 36 (Expr)
    _assignop        [reduce using rule 60 (Lvalue)]
    _semicolon       reduce using rule 36 (Expr)
    _semicolon       [reduce using rule 60 (Lvalue)]
    _period          reduce using rule 36 (Expr)
    _period          [reduce using rule 60 (Lvalue)]
    _rightparen      reduce using rule 36 (Expr)
    _rightparen      [reduce using rule 60 (Lvalue)]
    _leftbracket     reduce using rule 36 (Expr)
    _leftbracket     [reduce using rule 60 (Lvalue)]
    _rightbracket    reduce using rule 36 (Expr)
    _rightbracket    [reduce using rule 60 (Lvalue)]
    _greaterequal    reduce using rule 36 (Expr)
    _greaterequal    [reduce using rule 60 (Lvalue)]
    $default         reduce using rule 36 (Expr)


State 119

   59 Lvalue: Lvalue _period _id .

    $default  reduce using rule 59 (Lvalue)


State 120

   40 Expr: Expr . _plus Expr
   41     | Expr . _minus Expr
   42     | Expr . _multiplication Expr
   43     | Expr . _division Expr
   44     | Expr . _mod Expr
   46     | Expr . _less Expr
   47     | Expr . _lessequal Expr
   48     | Expr . _greater Expr
   49     | Expr . _greaterequal Expr
   50     | Expr . _equal Expr
   51     | Expr . _notequal Expr
   52     | Expr . _and Expr
   53     | Expr . _or Expr
   58 Lvalue: Lvalue _leftbracket Expr . _rightbracket

    _plus            shift, and go to state 81
    _minus           shift, and go to state 82
    _multiplication  shift, and go to state 83
    _division        shift, and go to state 84
    _mod             shift, and go to state 85
    _less            shift, and go to state 86
    _lessequal       shift, and go to state 87
    _greater         shift, and go to state 88
    _equal           shift, and go to state 89
    _notequal        shift, and go to state 90
    _and             shift, and go to state 91
    _or              shift, and go to state 92
    _rightbracket    shift, and go to state 124
    _greaterequal    shift, and go to state 94


State 121

   56 Expr: _newarray _leftparen _intconstant _comma . Type _rightparen

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    Type  go to state 125


State 122

   62 Call: _id _period _id _leftparen . Actuals _rightparen

    _newarray         shift, and go to state 59
    _readln           shift, and go to state 60
    _minus            shift, and go to state 61
    _not              shift, and go to state 62
    _intconstant      shift, and go to state 63
    _doubleconstant   shift, and go to state 64
    _stringconstant   shift, and go to state 65
    _booleanconstant  shift, and go to state 66
    _id               shift, and go to state 67

    Expr      go to state 102
    Lvalue    go to state 70
    Call      go to state 71
    Actuals   go to state 126
    Constant  go to state 72


State 123

   61 Call: _id _leftparen Actuals _rightparen .

    $default  reduce using rule 61 (Call)


State 124

   58 Lvalue: Lvalue _leftbracket Expr _rightbracket .

    $default  reduce using rule 58 (Lvalue)


State 125

   13 Type: Type . _leftbracket _rightbracket
   56 Expr: _newarray _leftparen _intconstant _comma Type . _rightparen

    _rightparen   shift, and go to state 127
    _leftbracket  shift, and go to state 20


State 126

   62 Call: _id _period _id _leftparen Actuals . _rightparen

    _rightparen  shift, and go to state 128


State 127

   56 Expr: _newarray _leftparen _intconstant _comma Type _rightparen .

    $default  reduce using rule 56 (Expr)


State 128

   62 Call: _id _period _id _leftparen Actuals _rightparen .

    $default  reduce using rule 62 (Call)
