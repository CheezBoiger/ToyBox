Terminals unused in grammar

   _false
   _true
   _greatereequal
   _epsilon


State 70 conflicts: 1 shift/reduce
State 79 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Decl

    2 Decl: %empty
    3     | VariableDecl Decl
    4     | ClassDecl Decl
    5     | InterfaceDecl Decl
    6     | FunctionDecl Decl

    7 VariableDecl: Variable _semicolon

    8 Variable: Type _id Assign
    9         | _id Assign

   10 Assign: _assignop Constant
   11       | %empty

   12 Type: _double
   13     | _int
   14     | _boolean
   15     | _string
   16     | Type _leftbracket _rightbracket
   17     | _id

   18 ClassDecl: _class _id ExtendClass ImplementClass _leftbrace Field _rightbrace

   19 ExtendClass: _extends _id
   20            | %empty

   21 ImplementClass: _implements ImplInterface
   22               | %empty

   23 ImplInterface: _id
   24              | _id _comma ImplInterface

   25 InterfaceDecl: _interface _id _leftbrace Prototype _rightbrace

   26 Prototype: Type _id _leftparen Formals _rightparen _semicolon Prototype
   27          | _void _id _leftparen Formals _rightparen _semicolon Prototype
   28          | %empty

   29 Formals: Variable
   30        | Variable _comma Formals
   31        | %empty

   32 Field: VariableDecl Field
   33      | FunctionDecl Field
   34      | %empty

   35 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock
   36             | _void _id _leftparen Formals _rightparen StmtBlock

   37 StmtBlock: _leftbrace StmtDeclares Stmt _rightbrace

   38 StmtDeclares: VariableDecl StmtDeclares
   39             | %empty

   40 Stmt: Expr _semicolon Stmt
   41     | IfStmt
   42     | WhileStmt
   43     | ForStmt Stmt
   44     | BreakStmt Stmt
   45     | ReturnStmt Stmt
   46     | PrintStmt Stmt
   47     | StmtBlock Stmt
   48     | %empty

   49 Expr: Lvalue _assignop Expr
   50     | Constant
   51     | Lvalue
   52     | Call
   53     | Expr _plus Expr
   54     | Expr _minus Expr
   55     | Expr _multiplication Expr
   56     | Expr _division Expr
   57     | Expr _mod Expr
   58     | _minus Expr
   59     | Expr _less Expr
   60     | Expr _lessequal Expr
   61     | Expr _greater Expr
   62     | Expr _greaterequal Expr
   63     | Expr _equal Expr
   64     | Expr _notequal Expr
   65     | Expr _and Expr
   66     | Expr _or Expr
   67     | _not Expr
   68     | _leftparen Expr _rightparen
   69     | _readln _leftparen _rightparen
   70     | _newarray _leftparen _intconstant _comma Type _rightparen

   71 Lvalue: _id LHelper

   72 LHelper: _leftbracket Expr _rightbracket LHelper
   73        | _period _id LHelper
   74        | %empty

   75 Call: _id _leftparen Actuals _rightparen
   76     | _id _period _id _leftparen Actuals _rightparen

   77 Actuals: Expr ActualHelper

   78 ActualHelper: _comma Expr ActualHelper
   79             | %empty

   80 Constant: _intconstant
   81         | _doubleconstant
   82         | _stringconstant
   83         | _booleanconstant

   84 IfStmt: _if _leftparen Expr _rightparen Stmt
   85       | _if _leftparen Expr _rightparen Stmt _else Stmt

   86 WhileStmt: _while _leftparen Expr _rightparen Stmt

   87 ForStmt: _for _leftparen ForOption _semicolon Expr _semicolon ForOption _rightparen

   88 ForOption: Expr
   89          | %empty

   90 BreakStmt: _break _semicolon

   91 ReturnStmt: _return Expr _semicolon
   92           | _return _semicolon

   93 PrintStmt: _println _leftparen Expr PrintOption _rightparen _semicolon

   94 PrintOption: _comma Expr PrintOption
   95            | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
_boolean (258) 14
_break (259) 90
_class (260) 18
_double (261) 12
_else (262) 85
_extends (263) 19
_false (264)
_for (265) 87
_if (266) 84 85
_implements (267) 21
_int (268) 13
_interface (269) 25
_newarray (270) 70
_println (271) 93
_readln (272) 69
_return (273) 91 92
_string (274) 15
_true (275)
_void (276) 27 36
_while (277) 86
_plus (278) 53
_minus (279) 54 58
_multiplication (280) 55
_division (281) 56
_mod (282) 57
_less (283) 59
_lessequal (284) 60
_greater (285) 61
_greatereequal (286)
_equal (287) 63
_notequal (288) 64
_and (289) 65
_or (290) 66
_not (291) 67
_assignop (292) 10 49
_semicolon (293) 7 26 27 40 87 90 91 92 93
_comma (294) 24 30 70 78 94
_period (295) 73 76
_leftparen (296) 26 27 35 36 68 69 70 75 76 84 85 86 87 93
_rightparen (297) 26 27 35 36 68 69 70 75 76 84 85 86 87 93
_leftbracket (298) 16 72
_rightbracket (299) 16 72
_leftbrace (300) 18 25 37
_rightbrace (301) 18 25 37
_intconstant (302) 70 80
_doubleconstant (303) 81
_stringconstant (304) 82
_booleanconstant (305) 83
_id (306) 8 9 17 18 19 23 24 25 26 27 35 36 71 73 75 76
_epsilon (307)
_greaterequal (308) 62
_ifx (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
Program (56)
    on left: 1, on right: 0
Decl (57)
    on left: 2 3 4 5 6, on right: 1 3 4 5 6
VariableDecl (58)
    on left: 7, on right: 3 32 38
Variable (59)
    on left: 8 9, on right: 7 29 30
Assign (60)
    on left: 10 11, on right: 8 9
Type (61)
    on left: 12 13 14 15 16 17, on right: 8 16 26 35 70
ClassDecl (62)
    on left: 18, on right: 4
ExtendClass (63)
    on left: 19 20, on right: 18
ImplementClass (64)
    on left: 21 22, on right: 18
ImplInterface (65)
    on left: 23 24, on right: 21 24
InterfaceDecl (66)
    on left: 25, on right: 5
Prototype (67)
    on left: 26 27 28, on right: 25 26 27
Formals (68)
    on left: 29 30 31, on right: 26 27 30 35 36
Field (69)
    on left: 32 33 34, on right: 18 32 33
FunctionDecl (70)
    on left: 35 36, on right: 6 33
StmtBlock (71)
    on left: 37, on right: 35 36 47
StmtDeclares (72)
    on left: 38 39, on right: 37 38
Stmt (73)
    on left: 40 41 42 43 44 45 46 47 48, on right: 37 40 43 44 45 46
    47 84 85 86
Expr (74)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
    67 68 69 70, on right: 40 49 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68 72 77 78 84 85 86 87 88 91 93 94
Lvalue (75)
    on left: 71, on right: 49 51
LHelper (76)
    on left: 72 73 74, on right: 71 72 73
Call (77)
    on left: 75 76, on right: 52
Actuals (78)
    on left: 77, on right: 75 76
ActualHelper (79)
    on left: 78 79, on right: 77 78
Constant (80)
    on left: 80 81 82 83, on right: 10 50
IfStmt (81)
    on left: 84 85, on right: 41
WhileStmt (82)
    on left: 86, on right: 42
ForStmt (83)
    on left: 87, on right: 43
ForOption (84)
    on left: 88 89, on right: 87
BreakStmt (85)
    on left: 90, on right: 44
ReturnStmt (86)
    on left: 91 92, on right: 45
PrintStmt (87)
    on left: 93, on right: 46
PrintOption (88)
    on left: 94 95, on right: 93 94


State 0

    0 $accept: . Program $end

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    $default  reduce using rule 2 (Decl)

    Program        go to state 9
    Decl           go to state 10
    VariableDecl   go to state 11
    Variable       go to state 12
    Type           go to state 13
    ClassDecl      go to state 14
    InterfaceDecl  go to state 15
    FunctionDecl   go to state 16


State 1

   14 Type: _boolean .

    $default  reduce using rule 14 (Type)


State 2

   18 ClassDecl: _class . _id ExtendClass ImplementClass _leftbrace Field _rightbrace

    _id  shift, and go to state 17


State 3

   12 Type: _double .

    $default  reduce using rule 12 (Type)


State 4

   13 Type: _int .

    $default  reduce using rule 13 (Type)


State 5

   25 InterfaceDecl: _interface . _id _leftbrace Prototype _rightbrace

    _id  shift, and go to state 18


State 6

   15 Type: _string .

    $default  reduce using rule 15 (Type)


State 7

   36 FunctionDecl: _void . _id _leftparen Formals _rightparen StmtBlock

    _id  shift, and go to state 19


State 8

    9 Variable: _id . Assign
   17 Type: _id .

    _assignop  shift, and go to state 20

    _leftbracket  reduce using rule 17 (Type)
    _id           reduce using rule 17 (Type)
    $default      reduce using rule 11 (Assign)

    Assign  go to state 21


State 9

    0 $accept: Program . $end

    $end  shift, and go to state 22


State 10

    1 Program: Decl .

    $default  reduce using rule 1 (Program)


State 11

    3 Decl: VariableDecl . Decl

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    $default  reduce using rule 2 (Decl)

    Decl           go to state 23
    VariableDecl   go to state 11
    Variable       go to state 12
    Type           go to state 13
    ClassDecl      go to state 14
    InterfaceDecl  go to state 15
    FunctionDecl   go to state 16


State 12

    7 VariableDecl: Variable . _semicolon

    _semicolon  shift, and go to state 24


State 13

    8 Variable: Type . _id Assign
   16 Type: Type . _leftbracket _rightbracket
   35 FunctionDecl: Type . _id _leftparen Formals _rightparen StmtBlock

    _leftbracket  shift, and go to state 25
    _id           shift, and go to state 26


State 14

    4 Decl: ClassDecl . Decl

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    $default  reduce using rule 2 (Decl)

    Decl           go to state 27
    VariableDecl   go to state 11
    Variable       go to state 12
    Type           go to state 13
    ClassDecl      go to state 14
    InterfaceDecl  go to state 15
    FunctionDecl   go to state 16


State 15

    5 Decl: InterfaceDecl . Decl

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    $default  reduce using rule 2 (Decl)

    Decl           go to state 28
    VariableDecl   go to state 11
    Variable       go to state 12
    Type           go to state 13
    ClassDecl      go to state 14
    InterfaceDecl  go to state 15
    FunctionDecl   go to state 16


State 16

    6 Decl: FunctionDecl . Decl

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    $default  reduce using rule 2 (Decl)

    Decl           go to state 29
    VariableDecl   go to state 11
    Variable       go to state 12
    Type           go to state 13
    ClassDecl      go to state 14
    InterfaceDecl  go to state 15
    FunctionDecl   go to state 16


State 17

   18 ClassDecl: _class _id . ExtendClass ImplementClass _leftbrace Field _rightbrace

    _extends  shift, and go to state 30

    $default  reduce using rule 20 (ExtendClass)

    ExtendClass  go to state 31


State 18

   25 InterfaceDecl: _interface _id . _leftbrace Prototype _rightbrace

    _leftbrace  shift, and go to state 32


State 19

   36 FunctionDecl: _void _id . _leftparen Formals _rightparen StmtBlock

    _leftparen  shift, and go to state 33


State 20

   10 Assign: _assignop . Constant

    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37

    Constant  go to state 38


State 21

    9 Variable: _id Assign .

    $default  reduce using rule 9 (Variable)


State 22

    0 $accept: Program $end .

    $default  accept


State 23

    3 Decl: VariableDecl Decl .

    $default  reduce using rule 3 (Decl)


State 24

    7 VariableDecl: Variable _semicolon .

    $default  reduce using rule 7 (VariableDecl)


State 25

   16 Type: Type _leftbracket . _rightbracket

    _rightbracket  shift, and go to state 39


State 26

    8 Variable: Type _id . Assign
   35 FunctionDecl: Type _id . _leftparen Formals _rightparen StmtBlock

    _assignop   shift, and go to state 20
    _leftparen  shift, and go to state 40

    $default  reduce using rule 11 (Assign)

    Assign  go to state 41


State 27

    4 Decl: ClassDecl Decl .

    $default  reduce using rule 4 (Decl)


State 28

    5 Decl: InterfaceDecl Decl .

    $default  reduce using rule 5 (Decl)


State 29

    6 Decl: FunctionDecl Decl .

    $default  reduce using rule 6 (Decl)


State 30

   19 ExtendClass: _extends . _id

    _id  shift, and go to state 42


State 31

   18 ClassDecl: _class _id ExtendClass . ImplementClass _leftbrace Field _rightbrace

    _implements  shift, and go to state 43

    $default  reduce using rule 22 (ImplementClass)

    ImplementClass  go to state 44


State 32

   25 InterfaceDecl: _interface _id _leftbrace . Prototype _rightbrace

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 45
    _id       shift, and go to state 46

    $default  reduce using rule 28 (Prototype)

    Type       go to state 47
    Prototype  go to state 48


State 33

   36 FunctionDecl: _void _id _leftparen . Formals _rightparen StmtBlock

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    $default  reduce using rule 31 (Formals)

    Variable  go to state 49
    Type      go to state 50
    Formals   go to state 51


State 34

   80 Constant: _intconstant .

    $default  reduce using rule 80 (Constant)


State 35

   81 Constant: _doubleconstant .

    $default  reduce using rule 81 (Constant)


State 36

   82 Constant: _stringconstant .

    $default  reduce using rule 82 (Constant)


State 37

   83 Constant: _booleanconstant .

    $default  reduce using rule 83 (Constant)


State 38

   10 Assign: _assignop Constant .

    $default  reduce using rule 10 (Assign)


State 39

   16 Type: Type _leftbracket _rightbracket .

    $default  reduce using rule 16 (Type)


State 40

   35 FunctionDecl: Type _id _leftparen . Formals _rightparen StmtBlock

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    $default  reduce using rule 31 (Formals)

    Variable  go to state 49
    Type      go to state 50
    Formals   go to state 52


State 41

    8 Variable: Type _id Assign .

    $default  reduce using rule 8 (Variable)


State 42

   19 ExtendClass: _extends _id .

    $default  reduce using rule 19 (ExtendClass)


State 43

   21 ImplementClass: _implements . ImplInterface

    _id  shift, and go to state 53

    ImplInterface  go to state 54


State 44

   18 ClassDecl: _class _id ExtendClass ImplementClass . _leftbrace Field _rightbrace

    _leftbrace  shift, and go to state 55


State 45

   27 Prototype: _void . _id _leftparen Formals _rightparen _semicolon Prototype

    _id  shift, and go to state 56


State 46

   17 Type: _id .

    $default  reduce using rule 17 (Type)


State 47

   16 Type: Type . _leftbracket _rightbracket
   26 Prototype: Type . _id _leftparen Formals _rightparen _semicolon Prototype

    _leftbracket  shift, and go to state 25
    _id           shift, and go to state 57


State 48

   25 InterfaceDecl: _interface _id _leftbrace Prototype . _rightbrace

    _rightbrace  shift, and go to state 58


State 49

   29 Formals: Variable .
   30        | Variable . _comma Formals

    _comma  shift, and go to state 59

    $default  reduce using rule 29 (Formals)


State 50

    8 Variable: Type . _id Assign
   16 Type: Type . _leftbracket _rightbracket

    _leftbracket  shift, and go to state 25
    _id           shift, and go to state 60


State 51

   36 FunctionDecl: _void _id _leftparen Formals . _rightparen StmtBlock

    _rightparen  shift, and go to state 61


State 52

   35 FunctionDecl: Type _id _leftparen Formals . _rightparen StmtBlock

    _rightparen  shift, and go to state 62


State 53

   23 ImplInterface: _id .
   24              | _id . _comma ImplInterface

    _comma  shift, and go to state 63

    $default  reduce using rule 23 (ImplInterface)


State 54

   21 ImplementClass: _implements ImplInterface .

    $default  reduce using rule 21 (ImplementClass)


State 55

   18 ClassDecl: _class _id ExtendClass ImplementClass _leftbrace . Field _rightbrace

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 7
    _id       shift, and go to state 8

    $default  reduce using rule 34 (Field)

    VariableDecl  go to state 64
    Variable      go to state 12
    Type          go to state 13
    Field         go to state 65
    FunctionDecl  go to state 66


State 56

   27 Prototype: _void _id . _leftparen Formals _rightparen _semicolon Prototype

    _leftparen  shift, and go to state 67


State 57

   26 Prototype: Type _id . _leftparen Formals _rightparen _semicolon Prototype

    _leftparen  shift, and go to state 68


State 58

   25 InterfaceDecl: _interface _id _leftbrace Prototype _rightbrace .

    $default  reduce using rule 25 (InterfaceDecl)


State 59

   30 Formals: Variable _comma . Formals

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    $default  reduce using rule 31 (Formals)

    Variable  go to state 49
    Type      go to state 50
    Formals   go to state 69


State 60

    8 Variable: Type _id . Assign

    _assignop  shift, and go to state 20

    $default  reduce using rule 11 (Assign)

    Assign  go to state 41


State 61

   36 FunctionDecl: _void _id _leftparen Formals _rightparen . StmtBlock

    _leftbrace  shift, and go to state 70

    StmtBlock  go to state 71


State 62

   35 FunctionDecl: Type _id _leftparen Formals _rightparen . StmtBlock

    _leftbrace  shift, and go to state 70

    StmtBlock  go to state 72


State 63

   24 ImplInterface: _id _comma . ImplInterface

    _id  shift, and go to state 53

    ImplInterface  go to state 73


State 64

   32 Field: VariableDecl . Field

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 7
    _id       shift, and go to state 8

    $default  reduce using rule 34 (Field)

    VariableDecl  go to state 64
    Variable      go to state 12
    Type          go to state 13
    Field         go to state 74
    FunctionDecl  go to state 66


State 65

   18 ClassDecl: _class _id ExtendClass ImplementClass _leftbrace Field . _rightbrace

    _rightbrace  shift, and go to state 75


State 66

   33 Field: FunctionDecl . Field

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 7
    _id       shift, and go to state 8

    $default  reduce using rule 34 (Field)

    VariableDecl  go to state 64
    Variable      go to state 12
    Type          go to state 13
    Field         go to state 76
    FunctionDecl  go to state 66


State 67

   27 Prototype: _void _id _leftparen . Formals _rightparen _semicolon Prototype

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    $default  reduce using rule 31 (Formals)

    Variable  go to state 49
    Type      go to state 50
    Formals   go to state 77


State 68

   26 Prototype: Type _id _leftparen . Formals _rightparen _semicolon Prototype

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    $default  reduce using rule 31 (Formals)

    Variable  go to state 49
    Type      go to state 50
    Formals   go to state 78


State 69

   30 Formals: Variable _comma Formals .

    $default  reduce using rule 30 (Formals)


State 70

   37 StmtBlock: _leftbrace . StmtDeclares Stmt _rightbrace

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    _id       [reduce using rule 39 (StmtDeclares)]
    $default  reduce using rule 39 (StmtDeclares)

    VariableDecl  go to state 79
    Variable      go to state 12
    Type          go to state 50
    StmtDeclares  go to state 80


State 71

   36 FunctionDecl: _void _id _leftparen Formals _rightparen StmtBlock .

    $default  reduce using rule 36 (FunctionDecl)


State 72

   35 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock .

    $default  reduce using rule 35 (FunctionDecl)


State 73

   24 ImplInterface: _id _comma ImplInterface .

    $default  reduce using rule 24 (ImplInterface)


State 74

   32 Field: VariableDecl Field .

    $default  reduce using rule 32 (Field)


State 75

   18 ClassDecl: _class _id ExtendClass ImplementClass _leftbrace Field _rightbrace .

    $default  reduce using rule 18 (ClassDecl)


State 76

   33 Field: FunctionDecl Field .

    $default  reduce using rule 33 (Field)


State 77

   27 Prototype: _void _id _leftparen Formals . _rightparen _semicolon Prototype

    _rightparen  shift, and go to state 81


State 78

   26 Prototype: Type _id _leftparen Formals . _rightparen _semicolon Prototype

    _rightparen  shift, and go to state 82


State 79

   38 StmtDeclares: VariableDecl . StmtDeclares

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    _id       [reduce using rule 39 (StmtDeclares)]
    $default  reduce using rule 39 (StmtDeclares)

    VariableDecl  go to state 79
    Variable      go to state 12
    Type          go to state 50
    StmtDeclares  go to state 83


State 80

   37 StmtBlock: _leftbrace StmtDeclares . Stmt _rightbrace

    _break            shift, and go to state 84
    _for              shift, and go to state 85
    _if               shift, and go to state 86
    _newarray         shift, and go to state 87
    _println          shift, and go to state 88
    _readln           shift, and go to state 89
    _return           shift, and go to state 90
    _while            shift, and go to state 91
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _leftbrace        shift, and go to state 70
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    $default  reduce using rule 48 (Stmt)

    StmtBlock   go to state 96
    Stmt        go to state 97
    Expr        go to state 98
    Lvalue      go to state 99
    Call        go to state 100
    Constant    go to state 101
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107


State 81

   27 Prototype: _void _id _leftparen Formals _rightparen . _semicolon Prototype

    _semicolon  shift, and go to state 108


State 82

   26 Prototype: Type _id _leftparen Formals _rightparen . _semicolon Prototype

    _semicolon  shift, and go to state 109


State 83

   38 StmtDeclares: VariableDecl StmtDeclares .

    $default  reduce using rule 38 (StmtDeclares)


State 84

   90 BreakStmt: _break . _semicolon

    _semicolon  shift, and go to state 110


State 85

   87 ForStmt: _for . _leftparen ForOption _semicolon Expr _semicolon ForOption _rightparen

    _leftparen  shift, and go to state 111


State 86

   84 IfStmt: _if . _leftparen Expr _rightparen Stmt
   85       | _if . _leftparen Expr _rightparen Stmt _else Stmt

    _leftparen  shift, and go to state 112


State 87

   70 Expr: _newarray . _leftparen _intconstant _comma Type _rightparen

    _leftparen  shift, and go to state 113


State 88

   93 PrintStmt: _println . _leftparen Expr PrintOption _rightparen _semicolon

    _leftparen  shift, and go to state 114


State 89

   69 Expr: _readln . _leftparen _rightparen

    _leftparen  shift, and go to state 115


State 90

   91 ReturnStmt: _return . Expr _semicolon
   92           | _return . _semicolon

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _semicolon        shift, and go to state 116
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 117
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 91

   86 WhileStmt: _while . _leftparen Expr _rightparen Stmt

    _leftparen  shift, and go to state 118


State 92

   58 Expr: _minus . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 119
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 93

   67 Expr: _not . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 120
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 94

   68 Expr: _leftparen . Expr _rightparen

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 121
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 95

   71 Lvalue: _id . LHelper
   75 Call: _id . _leftparen Actuals _rightparen
   76     | _id . _period _id _leftparen Actuals _rightparen

    _period       shift, and go to state 122
    _leftparen    shift, and go to state 123
    _leftbracket  shift, and go to state 124

    $default  reduce using rule 74 (LHelper)

    LHelper  go to state 125


State 96

   47 Stmt: StmtBlock . Stmt

    _break            shift, and go to state 84
    _for              shift, and go to state 85
    _if               shift, and go to state 86
    _newarray         shift, and go to state 87
    _println          shift, and go to state 88
    _readln           shift, and go to state 89
    _return           shift, and go to state 90
    _while            shift, and go to state 91
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _leftbrace        shift, and go to state 70
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    $default  reduce using rule 48 (Stmt)

    StmtBlock   go to state 96
    Stmt        go to state 126
    Expr        go to state 98
    Lvalue      go to state 99
    Call        go to state 100
    Constant    go to state 101
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107


State 97

   37 StmtBlock: _leftbrace StmtDeclares Stmt . _rightbrace

    _rightbrace  shift, and go to state 127


State 98

   40 Stmt: Expr . _semicolon Stmt
   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr

    _plus            shift, and go to state 128
    _minus           shift, and go to state 129
    _multiplication  shift, and go to state 130
    _division        shift, and go to state 131
    _mod             shift, and go to state 132
    _less            shift, and go to state 133
    _lessequal       shift, and go to state 134
    _greater         shift, and go to state 135
    _equal           shift, and go to state 136
    _notequal        shift, and go to state 137
    _and             shift, and go to state 138
    _or              shift, and go to state 139
    _semicolon       shift, and go to state 140
    _greaterequal    shift, and go to state 141


State 99

   49 Expr: Lvalue . _assignop Expr
   51     | Lvalue .

    _assignop  shift, and go to state 142

    $default  reduce using rule 51 (Expr)


State 100

   52 Expr: Call .

    $default  reduce using rule 52 (Expr)


State 101

   50 Expr: Constant .

    $default  reduce using rule 50 (Expr)


State 102

   41 Stmt: IfStmt .

    $default  reduce using rule 41 (Stmt)


State 103

   42 Stmt: WhileStmt .

    $default  reduce using rule 42 (Stmt)


State 104

   43 Stmt: ForStmt . Stmt

    _break            shift, and go to state 84
    _for              shift, and go to state 85
    _if               shift, and go to state 86
    _newarray         shift, and go to state 87
    _println          shift, and go to state 88
    _readln           shift, and go to state 89
    _return           shift, and go to state 90
    _while            shift, and go to state 91
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _leftbrace        shift, and go to state 70
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    $default  reduce using rule 48 (Stmt)

    StmtBlock   go to state 96
    Stmt        go to state 143
    Expr        go to state 98
    Lvalue      go to state 99
    Call        go to state 100
    Constant    go to state 101
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107


State 105

   44 Stmt: BreakStmt . Stmt

    _break            shift, and go to state 84
    _for              shift, and go to state 85
    _if               shift, and go to state 86
    _newarray         shift, and go to state 87
    _println          shift, and go to state 88
    _readln           shift, and go to state 89
    _return           shift, and go to state 90
    _while            shift, and go to state 91
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _leftbrace        shift, and go to state 70
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    $default  reduce using rule 48 (Stmt)

    StmtBlock   go to state 96
    Stmt        go to state 144
    Expr        go to state 98
    Lvalue      go to state 99
    Call        go to state 100
    Constant    go to state 101
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107


State 106

   45 Stmt: ReturnStmt . Stmt

    _break            shift, and go to state 84
    _for              shift, and go to state 85
    _if               shift, and go to state 86
    _newarray         shift, and go to state 87
    _println          shift, and go to state 88
    _readln           shift, and go to state 89
    _return           shift, and go to state 90
    _while            shift, and go to state 91
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _leftbrace        shift, and go to state 70
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    $default  reduce using rule 48 (Stmt)

    StmtBlock   go to state 96
    Stmt        go to state 145
    Expr        go to state 98
    Lvalue      go to state 99
    Call        go to state 100
    Constant    go to state 101
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107


State 107

   46 Stmt: PrintStmt . Stmt

    _break            shift, and go to state 84
    _for              shift, and go to state 85
    _if               shift, and go to state 86
    _newarray         shift, and go to state 87
    _println          shift, and go to state 88
    _readln           shift, and go to state 89
    _return           shift, and go to state 90
    _while            shift, and go to state 91
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _leftbrace        shift, and go to state 70
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    $default  reduce using rule 48 (Stmt)

    StmtBlock   go to state 96
    Stmt        go to state 146
    Expr        go to state 98
    Lvalue      go to state 99
    Call        go to state 100
    Constant    go to state 101
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107


State 108

   27 Prototype: _void _id _leftparen Formals _rightparen _semicolon . Prototype

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 45
    _id       shift, and go to state 46

    $default  reduce using rule 28 (Prototype)

    Type       go to state 47
    Prototype  go to state 147


State 109

   26 Prototype: Type _id _leftparen Formals _rightparen _semicolon . Prototype

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 45
    _id       shift, and go to state 46

    $default  reduce using rule 28 (Prototype)

    Type       go to state 47
    Prototype  go to state 148


State 110

   90 BreakStmt: _break _semicolon .

    $default  reduce using rule 90 (BreakStmt)


State 111

   87 ForStmt: _for _leftparen . ForOption _semicolon Expr _semicolon ForOption _rightparen

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    $default  reduce using rule 89 (ForOption)

    Expr       go to state 149
    Lvalue     go to state 99
    Call       go to state 100
    Constant   go to state 101
    ForOption  go to state 150


State 112

   84 IfStmt: _if _leftparen . Expr _rightparen Stmt
   85       | _if _leftparen . Expr _rightparen Stmt _else Stmt

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 151
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 113

   70 Expr: _newarray _leftparen . _intconstant _comma Type _rightparen

    _intconstant  shift, and go to state 152


State 114

   93 PrintStmt: _println _leftparen . Expr PrintOption _rightparen _semicolon

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 153
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 115

   69 Expr: _readln _leftparen . _rightparen

    _rightparen  shift, and go to state 154


State 116

   92 ReturnStmt: _return _semicolon .

    $default  reduce using rule 92 (ReturnStmt)


State 117

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr
   91 ReturnStmt: _return Expr . _semicolon

    _plus            shift, and go to state 128
    _minus           shift, and go to state 129
    _multiplication  shift, and go to state 130
    _division        shift, and go to state 131
    _mod             shift, and go to state 132
    _less            shift, and go to state 133
    _lessequal       shift, and go to state 134
    _greater         shift, and go to state 135
    _equal           shift, and go to state 136
    _notequal        shift, and go to state 137
    _and             shift, and go to state 138
    _or              shift, and go to state 139
    _semicolon       shift, and go to state 155
    _greaterequal    shift, and go to state 141


State 118

   86 WhileStmt: _while _leftparen . Expr _rightparen Stmt

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 156
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 119

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   58     | _minus Expr .
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr

    _less          shift, and go to state 133
    _lessequal     shift, and go to state 134
    _greater       shift, and go to state 135
    _equal         shift, and go to state 136
    _notequal      shift, and go to state 137
    _and           shift, and go to state 138
    _or            shift, and go to state 139
    _greaterequal  shift, and go to state 141

    $default  reduce using rule 58 (Expr)


State 120

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr
   67     | _not Expr .

    _less          shift, and go to state 133
    _lessequal     shift, and go to state 134
    _greater       shift, and go to state 135
    _equal         shift, and go to state 136
    _notequal      shift, and go to state 137
    _and           shift, and go to state 138
    _or            shift, and go to state 139
    _greaterequal  shift, and go to state 141

    $default  reduce using rule 67 (Expr)


State 121

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr
   68     | _leftparen Expr . _rightparen

    _plus            shift, and go to state 128
    _minus           shift, and go to state 129
    _multiplication  shift, and go to state 130
    _division        shift, and go to state 131
    _mod             shift, and go to state 132
    _less            shift, and go to state 133
    _lessequal       shift, and go to state 134
    _greater         shift, and go to state 135
    _equal           shift, and go to state 136
    _notequal        shift, and go to state 137
    _and             shift, and go to state 138
    _or              shift, and go to state 139
    _rightparen      shift, and go to state 157
    _greaterequal    shift, and go to state 141


State 122

   73 LHelper: _period . _id LHelper
   76 Call: _id _period . _id _leftparen Actuals _rightparen

    _id  shift, and go to state 158


State 123

   75 Call: _id _leftparen . Actuals _rightparen

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 159
    Lvalue    go to state 99
    Call      go to state 100
    Actuals   go to state 160
    Constant  go to state 101


State 124

   72 LHelper: _leftbracket . Expr _rightbracket LHelper

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 161
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 125

   71 Lvalue: _id LHelper .

    $default  reduce using rule 71 (Lvalue)


State 126

   47 Stmt: StmtBlock Stmt .

    $default  reduce using rule 47 (Stmt)


State 127

   37 StmtBlock: _leftbrace StmtDeclares Stmt _rightbrace .

    $default  reduce using rule 37 (StmtBlock)


State 128

   53 Expr: Expr _plus . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 162
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 129

   54 Expr: Expr _minus . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 163
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 130

   55 Expr: Expr _multiplication . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 164
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 131

   56 Expr: Expr _division . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 165
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 132

   57 Expr: Expr _mod . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 166
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 133

   59 Expr: Expr _less . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 167
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 134

   60 Expr: Expr _lessequal . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 168
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 135

   61 Expr: Expr _greater . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 169
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 136

   63 Expr: Expr _equal . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 170
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 137

   64 Expr: Expr _notequal . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 171
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 138

   65 Expr: Expr _and . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 172
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 139

   66 Expr: Expr _or . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 173
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 140

   40 Stmt: Expr _semicolon . Stmt

    _break            shift, and go to state 84
    _for              shift, and go to state 85
    _if               shift, and go to state 86
    _newarray         shift, and go to state 87
    _println          shift, and go to state 88
    _readln           shift, and go to state 89
    _return           shift, and go to state 90
    _while            shift, and go to state 91
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _leftbrace        shift, and go to state 70
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    $default  reduce using rule 48 (Stmt)

    StmtBlock   go to state 96
    Stmt        go to state 174
    Expr        go to state 98
    Lvalue      go to state 99
    Call        go to state 100
    Constant    go to state 101
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107


State 141

   62 Expr: Expr _greaterequal . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 175
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 142

   49 Expr: Lvalue _assignop . Expr

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 176
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 143

   43 Stmt: ForStmt Stmt .

    $default  reduce using rule 43 (Stmt)


State 144

   44 Stmt: BreakStmt Stmt .

    $default  reduce using rule 44 (Stmt)


State 145

   45 Stmt: ReturnStmt Stmt .

    $default  reduce using rule 45 (Stmt)


State 146

   46 Stmt: PrintStmt Stmt .

    $default  reduce using rule 46 (Stmt)


State 147

   27 Prototype: _void _id _leftparen Formals _rightparen _semicolon Prototype .

    $default  reduce using rule 27 (Prototype)


State 148

   26 Prototype: Type _id _leftparen Formals _rightparen _semicolon Prototype .

    $default  reduce using rule 26 (Prototype)


State 149

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr
   88 ForOption: Expr .

    _plus            shift, and go to state 128
    _minus           shift, and go to state 129
    _multiplication  shift, and go to state 130
    _division        shift, and go to state 131
    _mod             shift, and go to state 132
    _less            shift, and go to state 133
    _lessequal       shift, and go to state 134
    _greater         shift, and go to state 135
    _equal           shift, and go to state 136
    _notequal        shift, and go to state 137
    _and             shift, and go to state 138
    _or              shift, and go to state 139
    _greaterequal    shift, and go to state 141

    $default  reduce using rule 88 (ForOption)


State 150

   87 ForStmt: _for _leftparen ForOption . _semicolon Expr _semicolon ForOption _rightparen

    _semicolon  shift, and go to state 177


State 151

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr
   84 IfStmt: _if _leftparen Expr . _rightparen Stmt
   85       | _if _leftparen Expr . _rightparen Stmt _else Stmt

    _plus            shift, and go to state 128
    _minus           shift, and go to state 129
    _multiplication  shift, and go to state 130
    _division        shift, and go to state 131
    _mod             shift, and go to state 132
    _less            shift, and go to state 133
    _lessequal       shift, and go to state 134
    _greater         shift, and go to state 135
    _equal           shift, and go to state 136
    _notequal        shift, and go to state 137
    _and             shift, and go to state 138
    _or              shift, and go to state 139
    _rightparen      shift, and go to state 178
    _greaterequal    shift, and go to state 141


State 152

   70 Expr: _newarray _leftparen _intconstant . _comma Type _rightparen

    _comma  shift, and go to state 179


State 153

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr
   93 PrintStmt: _println _leftparen Expr . PrintOption _rightparen _semicolon

    _plus            shift, and go to state 128
    _minus           shift, and go to state 129
    _multiplication  shift, and go to state 130
    _division        shift, and go to state 131
    _mod             shift, and go to state 132
    _less            shift, and go to state 133
    _lessequal       shift, and go to state 134
    _greater         shift, and go to state 135
    _equal           shift, and go to state 136
    _notequal        shift, and go to state 137
    _and             shift, and go to state 138
    _or              shift, and go to state 139
    _comma           shift, and go to state 180
    _greaterequal    shift, and go to state 141

    $default  reduce using rule 95 (PrintOption)

    PrintOption  go to state 181


State 154

   69 Expr: _readln _leftparen _rightparen .

    $default  reduce using rule 69 (Expr)


State 155

   91 ReturnStmt: _return Expr _semicolon .

    $default  reduce using rule 91 (ReturnStmt)


State 156

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr
   86 WhileStmt: _while _leftparen Expr . _rightparen Stmt

    _plus            shift, and go to state 128
    _minus           shift, and go to state 129
    _multiplication  shift, and go to state 130
    _division        shift, and go to state 131
    _mod             shift, and go to state 132
    _less            shift, and go to state 133
    _lessequal       shift, and go to state 134
    _greater         shift, and go to state 135
    _equal           shift, and go to state 136
    _notequal        shift, and go to state 137
    _and             shift, and go to state 138
    _or              shift, and go to state 139
    _rightparen      shift, and go to state 182
    _greaterequal    shift, and go to state 141


State 157

   68 Expr: _leftparen Expr _rightparen .

    $default  reduce using rule 68 (Expr)


State 158

   73 LHelper: _period _id . LHelper
   76 Call: _id _period _id . _leftparen Actuals _rightparen

    _period       shift, and go to state 183
    _leftparen    shift, and go to state 184
    _leftbracket  shift, and go to state 124

    $default  reduce using rule 74 (LHelper)

    LHelper  go to state 185


State 159

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr
   77 Actuals: Expr . ActualHelper

    _plus            shift, and go to state 128
    _minus           shift, and go to state 129
    _multiplication  shift, and go to state 130
    _division        shift, and go to state 131
    _mod             shift, and go to state 132
    _less            shift, and go to state 133
    _lessequal       shift, and go to state 134
    _greater         shift, and go to state 135
    _equal           shift, and go to state 136
    _notequal        shift, and go to state 137
    _and             shift, and go to state 138
    _or              shift, and go to state 139
    _comma           shift, and go to state 186
    _greaterequal    shift, and go to state 141

    $default  reduce using rule 79 (ActualHelper)

    ActualHelper  go to state 187


State 160

   75 Call: _id _leftparen Actuals . _rightparen

    _rightparen  shift, and go to state 188


State 161

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr
   72 LHelper: _leftbracket Expr . _rightbracket LHelper

    _plus            shift, and go to state 128
    _minus           shift, and go to state 129
    _multiplication  shift, and go to state 130
    _division        shift, and go to state 131
    _mod             shift, and go to state 132
    _less            shift, and go to state 133
    _lessequal       shift, and go to state 134
    _greater         shift, and go to state 135
    _equal           shift, and go to state 136
    _notequal        shift, and go to state 137
    _and             shift, and go to state 138
    _or              shift, and go to state 139
    _rightbracket    shift, and go to state 189
    _greaterequal    shift, and go to state 141


State 162

   53 Expr: Expr . _plus Expr
   53     | Expr _plus Expr .
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr

    _less          shift, and go to state 133
    _lessequal     shift, and go to state 134
    _greater       shift, and go to state 135
    _equal         shift, and go to state 136
    _notequal      shift, and go to state 137
    _and           shift, and go to state 138
    _or            shift, and go to state 139
    _greaterequal  shift, and go to state 141

    $default  reduce using rule 53 (Expr)


State 163

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   54     | Expr _minus Expr .
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr

    _less          shift, and go to state 133
    _lessequal     shift, and go to state 134
    _greater       shift, and go to state 135
    _equal         shift, and go to state 136
    _notequal      shift, and go to state 137
    _and           shift, and go to state 138
    _or            shift, and go to state 139
    _greaterequal  shift, and go to state 141

    $default  reduce using rule 54 (Expr)


State 164

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   55     | Expr _multiplication Expr .
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr

    _plus          shift, and go to state 128
    _minus         shift, and go to state 129
    _less          shift, and go to state 133
    _lessequal     shift, and go to state 134
    _greater       shift, and go to state 135
    _equal         shift, and go to state 136
    _notequal      shift, and go to state 137
    _and           shift, and go to state 138
    _or            shift, and go to state 139
    _greaterequal  shift, and go to state 141

    $default  reduce using rule 55 (Expr)


State 165

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   56     | Expr _division Expr .
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr

    _plus          shift, and go to state 128
    _minus         shift, and go to state 129
    _less          shift, and go to state 133
    _lessequal     shift, and go to state 134
    _greater       shift, and go to state 135
    _equal         shift, and go to state 136
    _notequal      shift, and go to state 137
    _and           shift, and go to state 138
    _or            shift, and go to state 139
    _greaterequal  shift, and go to state 141

    $default  reduce using rule 56 (Expr)


State 166

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   57     | Expr _mod Expr .
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr

    _plus          shift, and go to state 128
    _minus         shift, and go to state 129
    _less          shift, and go to state 133
    _lessequal     shift, and go to state 134
    _greater       shift, and go to state 135
    _equal         shift, and go to state 136
    _notequal      shift, and go to state 137
    _and           shift, and go to state 138
    _or            shift, and go to state 139
    _greaterequal  shift, and go to state 141

    $default  reduce using rule 57 (Expr)


State 167

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   59     | Expr _less Expr .
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr

    _equal     shift, and go to state 136
    _notequal  shift, and go to state 137
    _and       shift, and go to state 138
    _or        shift, and go to state 139

    $default  reduce using rule 59 (Expr)


State 168

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   60     | Expr _lessequal Expr .
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr

    _equal     shift, and go to state 136
    _notequal  shift, and go to state 137
    _and       shift, and go to state 138
    _or        shift, and go to state 139

    $default  reduce using rule 60 (Expr)


State 169

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   61     | Expr _greater Expr .
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr

    _equal     shift, and go to state 136
    _notequal  shift, and go to state 137
    _and       shift, and go to state 138
    _or        shift, and go to state 139

    $default  reduce using rule 61 (Expr)


State 170

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   63     | Expr _equal Expr .
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr

    _and  shift, and go to state 138
    _or   shift, and go to state 139

    $default  reduce using rule 63 (Expr)


State 171

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   64     | Expr _notequal Expr .
   65     | Expr . _and Expr
   66     | Expr . _or Expr

    _and  shift, and go to state 138
    _or   shift, and go to state 139

    $default  reduce using rule 64 (Expr)


State 172

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   65     | Expr _and Expr .
   66     | Expr . _or Expr

    _or  shift, and go to state 139

    $default  reduce using rule 65 (Expr)


State 173

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr
   66     | Expr _or Expr .

    $default  reduce using rule 66 (Expr)


State 174

   40 Stmt: Expr _semicolon Stmt .

    $default  reduce using rule 40 (Stmt)


State 175

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   62     | Expr _greaterequal Expr .
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr

    _equal     shift, and go to state 136
    _notequal  shift, and go to state 137
    _and       shift, and go to state 138
    _or        shift, and go to state 139

    $default  reduce using rule 62 (Expr)


State 176

   49 Expr: Lvalue _assignop Expr .
   53     | Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr

    $default  reduce using rule 49 (Expr)


State 177

   87 ForStmt: _for _leftparen ForOption _semicolon . Expr _semicolon ForOption _rightparen

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 190
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 178

   84 IfStmt: _if _leftparen Expr _rightparen . Stmt
   85       | _if _leftparen Expr _rightparen . Stmt _else Stmt

    _break            shift, and go to state 84
    _for              shift, and go to state 85
    _if               shift, and go to state 86
    _newarray         shift, and go to state 87
    _println          shift, and go to state 88
    _readln           shift, and go to state 89
    _return           shift, and go to state 90
    _while            shift, and go to state 91
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _leftbrace        shift, and go to state 70
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    $default  reduce using rule 48 (Stmt)

    StmtBlock   go to state 96
    Stmt        go to state 191
    Expr        go to state 98
    Lvalue      go to state 99
    Call        go to state 100
    Constant    go to state 101
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107


State 179

   70 Expr: _newarray _leftparen _intconstant _comma . Type _rightparen

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 46

    Type  go to state 192


State 180

   94 PrintOption: _comma . Expr PrintOption

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 193
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 181

   93 PrintStmt: _println _leftparen Expr PrintOption . _rightparen _semicolon

    _rightparen  shift, and go to state 194


State 182

   86 WhileStmt: _while _leftparen Expr _rightparen . Stmt

    _break            shift, and go to state 84
    _for              shift, and go to state 85
    _if               shift, and go to state 86
    _newarray         shift, and go to state 87
    _println          shift, and go to state 88
    _readln           shift, and go to state 89
    _return           shift, and go to state 90
    _while            shift, and go to state 91
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _leftbrace        shift, and go to state 70
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    $default  reduce using rule 48 (Stmt)

    StmtBlock   go to state 96
    Stmt        go to state 195
    Expr        go to state 98
    Lvalue      go to state 99
    Call        go to state 100
    Constant    go to state 101
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107


State 183

   73 LHelper: _period . _id LHelper

    _id  shift, and go to state 196


State 184

   76 Call: _id _period _id _leftparen . Actuals _rightparen

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 159
    Lvalue    go to state 99
    Call      go to state 100
    Actuals   go to state 197
    Constant  go to state 101


State 185

   73 LHelper: _period _id LHelper .

    $default  reduce using rule 73 (LHelper)


State 186

   78 ActualHelper: _comma . Expr ActualHelper

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    Expr      go to state 198
    Lvalue    go to state 99
    Call      go to state 100
    Constant  go to state 101


State 187

   77 Actuals: Expr ActualHelper .

    $default  reduce using rule 77 (Actuals)


State 188

   75 Call: _id _leftparen Actuals _rightparen .

    $default  reduce using rule 75 (Call)


State 189

   72 LHelper: _leftbracket Expr _rightbracket . LHelper

    _period       shift, and go to state 183
    _leftbracket  shift, and go to state 124

    $default  reduce using rule 74 (LHelper)

    LHelper  go to state 199


State 190

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr
   87 ForStmt: _for _leftparen ForOption _semicolon Expr . _semicolon ForOption _rightparen

    _plus            shift, and go to state 128
    _minus           shift, and go to state 129
    _multiplication  shift, and go to state 130
    _division        shift, and go to state 131
    _mod             shift, and go to state 132
    _less            shift, and go to state 133
    _lessequal       shift, and go to state 134
    _greater         shift, and go to state 135
    _equal           shift, and go to state 136
    _notequal        shift, and go to state 137
    _and             shift, and go to state 138
    _or              shift, and go to state 139
    _semicolon       shift, and go to state 200
    _greaterequal    shift, and go to state 141


State 191

   84 IfStmt: _if _leftparen Expr _rightparen Stmt .
   85       | _if _leftparen Expr _rightparen Stmt . _else Stmt

    _else  shift, and go to state 201

    $default  reduce using rule 84 (IfStmt)


State 192

   16 Type: Type . _leftbracket _rightbracket
   70 Expr: _newarray _leftparen _intconstant _comma Type . _rightparen

    _rightparen   shift, and go to state 202
    _leftbracket  shift, and go to state 25


State 193

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr
   94 PrintOption: _comma Expr . PrintOption

    _plus            shift, and go to state 128
    _minus           shift, and go to state 129
    _multiplication  shift, and go to state 130
    _division        shift, and go to state 131
    _mod             shift, and go to state 132
    _less            shift, and go to state 133
    _lessequal       shift, and go to state 134
    _greater         shift, and go to state 135
    _equal           shift, and go to state 136
    _notequal        shift, and go to state 137
    _and             shift, and go to state 138
    _or              shift, and go to state 139
    _comma           shift, and go to state 180
    _greaterequal    shift, and go to state 141

    $default  reduce using rule 95 (PrintOption)

    PrintOption  go to state 203


State 194

   93 PrintStmt: _println _leftparen Expr PrintOption _rightparen . _semicolon

    _semicolon  shift, and go to state 204


State 195

   86 WhileStmt: _while _leftparen Expr _rightparen Stmt .

    $default  reduce using rule 86 (WhileStmt)


State 196

   73 LHelper: _period _id . LHelper

    _period       shift, and go to state 183
    _leftbracket  shift, and go to state 124

    $default  reduce using rule 74 (LHelper)

    LHelper  go to state 185


State 197

   76 Call: _id _period _id _leftparen Actuals . _rightparen

    _rightparen  shift, and go to state 205


State 198

   53 Expr: Expr . _plus Expr
   54     | Expr . _minus Expr
   55     | Expr . _multiplication Expr
   56     | Expr . _division Expr
   57     | Expr . _mod Expr
   59     | Expr . _less Expr
   60     | Expr . _lessequal Expr
   61     | Expr . _greater Expr
   62     | Expr . _greaterequal Expr
   63     | Expr . _equal Expr
   64     | Expr . _notequal Expr
   65     | Expr . _and Expr
   66     | Expr . _or Expr
   78 ActualHelper: _comma Expr . ActualHelper

    _plus            shift, and go to state 128
    _minus           shift, and go to state 129
    _multiplication  shift, and go to state 130
    _division        shift, and go to state 131
    _mod             shift, and go to state 132
    _less            shift, and go to state 133
    _lessequal       shift, and go to state 134
    _greater         shift, and go to state 135
    _equal           shift, and go to state 136
    _notequal        shift, and go to state 137
    _and             shift, and go to state 138
    _or              shift, and go to state 139
    _comma           shift, and go to state 186
    _greaterequal    shift, and go to state 141

    $default  reduce using rule 79 (ActualHelper)

    ActualHelper  go to state 206


State 199

   72 LHelper: _leftbracket Expr _rightbracket LHelper .

    $default  reduce using rule 72 (LHelper)


State 200

   87 ForStmt: _for _leftparen ForOption _semicolon Expr _semicolon . ForOption _rightparen

    _newarray         shift, and go to state 87
    _readln           shift, and go to state 89
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    $default  reduce using rule 89 (ForOption)

    Expr       go to state 149
    Lvalue     go to state 99
    Call       go to state 100
    Constant   go to state 101
    ForOption  go to state 207


State 201

   85 IfStmt: _if _leftparen Expr _rightparen Stmt _else . Stmt

    _break            shift, and go to state 84
    _for              shift, and go to state 85
    _if               shift, and go to state 86
    _newarray         shift, and go to state 87
    _println          shift, and go to state 88
    _readln           shift, and go to state 89
    _return           shift, and go to state 90
    _while            shift, and go to state 91
    _minus            shift, and go to state 92
    _not              shift, and go to state 93
    _leftparen        shift, and go to state 94
    _leftbrace        shift, and go to state 70
    _intconstant      shift, and go to state 34
    _doubleconstant   shift, and go to state 35
    _stringconstant   shift, and go to state 36
    _booleanconstant  shift, and go to state 37
    _id               shift, and go to state 95

    $default  reduce using rule 48 (Stmt)

    StmtBlock   go to state 96
    Stmt        go to state 208
    Expr        go to state 98
    Lvalue      go to state 99
    Call        go to state 100
    Constant    go to state 101
    IfStmt      go to state 102
    WhileStmt   go to state 103
    ForStmt     go to state 104
    BreakStmt   go to state 105
    ReturnStmt  go to state 106
    PrintStmt   go to state 107


State 202

   70 Expr: _newarray _leftparen _intconstant _comma Type _rightparen .

    $default  reduce using rule 70 (Expr)


State 203

   94 PrintOption: _comma Expr PrintOption .

    $default  reduce using rule 94 (PrintOption)


State 204

   93 PrintStmt: _println _leftparen Expr PrintOption _rightparen _semicolon .

    $default  reduce using rule 93 (PrintStmt)


State 205

   76 Call: _id _period _id _leftparen Actuals _rightparen .

    $default  reduce using rule 76 (Call)


State 206

   78 ActualHelper: _comma Expr ActualHelper .

    $default  reduce using rule 78 (ActualHelper)


State 207

   87 ForStmt: _for _leftparen ForOption _semicolon Expr _semicolon ForOption . _rightparen

    _rightparen  shift, and go to state 209


State 208

   85 IfStmt: _if _leftparen Expr _rightparen Stmt _else Stmt .

    $default  reduce using rule 85 (IfStmt)


State 209

   87 ForStmt: _for _leftparen ForOption _semicolon Expr _semicolon ForOption _rightparen .

    $default  reduce using rule 87 (ForStmt)
