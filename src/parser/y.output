Terminals unused in grammar

   _else
   _false
   _true
   _void
   _greatereequal
   _epsilon


State 52 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Decl

    2 Decl: %empty
    3     | VariableDecl Decl
    4     | ClassDecl Decl
    5     | InterfaceDecl Decl
    6     | FunctionDecl Decl

    7 VariableDecl: Variable _semicolon

    8 Variable: Type _id

    9 Type: _double
   10     | _int
   11     | _boolean
   12     | _string
   13     | Type _leftbracket _rightbracket
   14     | _id

   15 ClassDecl: _class _id ExtendClass ImplementClass _leftbrace Field _rightbrace

   16 ExtendClass: _extends _id
   17            | %empty

   18 ImplementClass: _implements ImplInterface
   19               | %empty

   20 ImplInterface: _id
   21              | _id _comma ImplInterface

   22 InterfaceDecl: _interface _id _leftbrace Prototype _rightbrace

   23 Prototype: Type _id _leftparen Formals _rightparen _semicolon Prototype
   24          | %empty

   25 Formals: Variable
   26        | Variable _comma Formals
   27        | %empty

   28 Field: VariableDecl
   29      | %empty

   30 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock

   31 StmtBlock: _leftbrace StmtDeclares Stmt _rightbrace

   32 StmtDeclares: VariableDecl
   33             | %empty

   34 Stmt: Expr _semicolon Stmt
   35     | IfStmt
   36     | WhileStmt
   37     | ForStmt
   38     | BreakStmt
   39     | ReturnStmt
   40     | PrintStmt
   41     | StmtBlock
   42     | %empty

   43 Expr: Lvalue _assignop Expr
   44     | Constant
   45     | Lvalue
   46     | Call
   47     | Expr _plus Expr
   48     | Expr _minus Expr
   49     | Expr _multiplication Expr
   50     | Expr _division Expr
   51     | Expr _mod Expr
   52     | _minus Expr
   53     | Expr _less Expr
   54     | Expr _lessequal Expr
   55     | Expr _greater Expr
   56     | Expr _greaterequal Expr
   57     | Expr _equal Expr
   58     | Expr _notequal Expr
   59     | Expr _and Expr
   60     | Expr _or Expr
   61     | _not Expr
   62     | _readln _leftparen _rightparen
   63     | _newarray _leftparen _intconstant _comma Type _rightparen

   64 Lvalue: _id LHelper

   65 LHelper: _leftbracket Expr _rightbracket LHelper
   66        | _period _id LHelper
   67        | %empty

   68 Call: _id _leftparen Actuals _rightparen
   69     | _id _period _id _leftparen Actuals _rightparen

   70 Actuals: Expr

   71 Constant: _intconstant
   72         | _doubleconstant
   73         | _stringconstant
   74         | _booleanconstant

   75 IfStmt: _if _leftparen Expr _rightparen Stmt

   76 WhileStmt: _while _leftparen Expr _rightparen Stmt

   77 ForStmt: _for _leftparen Expr _semicolon Expr _semicolon Expr _rightparen Stmt

   78 BreakStmt: _break _semicolon

   79 ReturnStmt: _return Expr _semicolon
   80           | _return _semicolon

   81 PrintStmt: _println Expr


Terminals, with rules where they appear

$end (0) 0
error (256)
_boolean (258) 11
_break (259) 78
_class (260) 15
_double (261) 9
_else (262)
_extends (263) 16
_false (264)
_for (265) 77
_if (266) 75
_implements (267) 18
_int (268) 10
_interface (269) 22
_newarray (270) 63
_println (271) 81
_readln (272) 62
_return (273) 79 80
_string (274) 12
_true (275)
_void (276)
_while (277) 76
_plus (278) 47
_minus (279) 48 52
_multiplication (280) 49
_division (281) 50
_mod (282) 51
_less (283) 53
_lessequal (284) 54
_greater (285) 55
_greatereequal (286)
_equal (287) 57
_notequal (288) 58
_and (289) 59
_or (290) 60
_not (291) 61
_assignop (292) 43
_semicolon (293) 7 23 34 77 78 79 80
_comma (294) 21 26 63
_period (295) 66 69
_leftparen (296) 23 30 62 63 68 69 75 76 77
_rightparen (297) 23 30 62 63 68 69 75 76 77
_leftbracket (298) 13 65
_rightbracket (299) 13 65
_leftbrace (300) 15 22 31
_rightbrace (301) 15 22 31
_intconstant (302) 63 71
_doubleconstant (303) 72
_stringconstant (304) 73
_booleanconstant (305) 74
_id (306) 8 14 15 16 20 21 22 23 30 64 66 68 69
_epsilon (307)
_greaterequal (308) 56


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
Program (55)
    on left: 1, on right: 0
Decl (56)
    on left: 2 3 4 5 6, on right: 1 3 4 5 6
VariableDecl (57)
    on left: 7, on right: 3 28 32
Variable (58)
    on left: 8, on right: 7 25 26
Type (59)
    on left: 9 10 11 12 13 14, on right: 8 13 23 30 63
ClassDecl (60)
    on left: 15, on right: 4
ExtendClass (61)
    on left: 16 17, on right: 15
ImplementClass (62)
    on left: 18 19, on right: 15
ImplInterface (63)
    on left: 20 21, on right: 18 21
InterfaceDecl (64)
    on left: 22, on right: 5
Prototype (65)
    on left: 23 24, on right: 22 23
Formals (66)
    on left: 25 26 27, on right: 23 26 30
Field (67)
    on left: 28 29, on right: 15
FunctionDecl (68)
    on left: 30, on right: 6
StmtBlock (69)
    on left: 31, on right: 30 41
StmtDeclares (70)
    on left: 32 33, on right: 31
Stmt (71)
    on left: 34 35 36 37 38 39 40 41 42, on right: 31 34 75 76 77
Expr (72)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    61 62 63, on right: 34 43 47 48 49 50 51 52 53 54 55 56 57 58 59
    60 61 65 70 75 76 77 79 81
Lvalue (73)
    on left: 64, on right: 43 45
LHelper (74)
    on left: 65 66 67, on right: 64 65 66
Call (75)
    on left: 68 69, on right: 46
Actuals (76)
    on left: 70, on right: 68 69
Constant (77)
    on left: 71 72 73 74, on right: 44
IfStmt (78)
    on left: 75, on right: 35
WhileStmt (79)
    on left: 76, on right: 36
ForStmt (80)
    on left: 77, on right: 37
BreakStmt (81)
    on left: 78, on right: 38
ReturnStmt (82)
    on left: 79 80, on right: 39
PrintStmt (83)
    on left: 81, on right: 40


State 0

    0 $accept: . Program $end

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _id         shift, and go to state 7

    $default  reduce using rule 2 (Decl)

    Program        go to state 8
    Decl           go to state 9
    VariableDecl   go to state 10
    Variable       go to state 11
    Type           go to state 12
    ClassDecl      go to state 13
    InterfaceDecl  go to state 14
    FunctionDecl   go to state 15


State 1

   11 Type: _boolean .

    $default  reduce using rule 11 (Type)


State 2

   15 ClassDecl: _class . _id ExtendClass ImplementClass _leftbrace Field _rightbrace

    _id  shift, and go to state 16


State 3

    9 Type: _double .

    $default  reduce using rule 9 (Type)


State 4

   10 Type: _int .

    $default  reduce using rule 10 (Type)


State 5

   22 InterfaceDecl: _interface . _id _leftbrace Prototype _rightbrace

    _id  shift, and go to state 17


State 6

   12 Type: _string .

    $default  reduce using rule 12 (Type)


State 7

   14 Type: _id .

    $default  reduce using rule 14 (Type)


State 8

    0 $accept: Program . $end

    $end  shift, and go to state 18


State 9

    1 Program: Decl .

    $default  reduce using rule 1 (Program)


State 10

    3 Decl: VariableDecl . Decl

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _id         shift, and go to state 7

    $default  reduce using rule 2 (Decl)

    Decl           go to state 19
    VariableDecl   go to state 10
    Variable       go to state 11
    Type           go to state 12
    ClassDecl      go to state 13
    InterfaceDecl  go to state 14
    FunctionDecl   go to state 15


State 11

    7 VariableDecl: Variable . _semicolon

    _semicolon  shift, and go to state 20


State 12

    8 Variable: Type . _id
   13 Type: Type . _leftbracket _rightbracket
   30 FunctionDecl: Type . _id _leftparen Formals _rightparen StmtBlock

    _leftbracket  shift, and go to state 21
    _id           shift, and go to state 22


State 13

    4 Decl: ClassDecl . Decl

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _id         shift, and go to state 7

    $default  reduce using rule 2 (Decl)

    Decl           go to state 23
    VariableDecl   go to state 10
    Variable       go to state 11
    Type           go to state 12
    ClassDecl      go to state 13
    InterfaceDecl  go to state 14
    FunctionDecl   go to state 15


State 14

    5 Decl: InterfaceDecl . Decl

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _id         shift, and go to state 7

    $default  reduce using rule 2 (Decl)

    Decl           go to state 24
    VariableDecl   go to state 10
    Variable       go to state 11
    Type           go to state 12
    ClassDecl      go to state 13
    InterfaceDecl  go to state 14
    FunctionDecl   go to state 15


State 15

    6 Decl: FunctionDecl . Decl

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _id         shift, and go to state 7

    $default  reduce using rule 2 (Decl)

    Decl           go to state 25
    VariableDecl   go to state 10
    Variable       go to state 11
    Type           go to state 12
    ClassDecl      go to state 13
    InterfaceDecl  go to state 14
    FunctionDecl   go to state 15


State 16

   15 ClassDecl: _class _id . ExtendClass ImplementClass _leftbrace Field _rightbrace

    _extends  shift, and go to state 26

    $default  reduce using rule 17 (ExtendClass)

    ExtendClass  go to state 27


State 17

   22 InterfaceDecl: _interface _id . _leftbrace Prototype _rightbrace

    _leftbrace  shift, and go to state 28


State 18

    0 $accept: Program $end .

    $default  accept


State 19

    3 Decl: VariableDecl Decl .

    $default  reduce using rule 3 (Decl)


State 20

    7 VariableDecl: Variable _semicolon .

    $default  reduce using rule 7 (VariableDecl)


State 21

   13 Type: Type _leftbracket . _rightbracket

    _rightbracket  shift, and go to state 29


State 22

    8 Variable: Type _id .
   30 FunctionDecl: Type _id . _leftparen Formals _rightparen StmtBlock

    _leftparen  shift, and go to state 30

    $default  reduce using rule 8 (Variable)


State 23

    4 Decl: ClassDecl Decl .

    $default  reduce using rule 4 (Decl)


State 24

    5 Decl: InterfaceDecl Decl .

    $default  reduce using rule 5 (Decl)


State 25

    6 Decl: FunctionDecl Decl .

    $default  reduce using rule 6 (Decl)


State 26

   16 ExtendClass: _extends . _id

    _id  shift, and go to state 31


State 27

   15 ClassDecl: _class _id ExtendClass . ImplementClass _leftbrace Field _rightbrace

    _implements  shift, and go to state 32

    $default  reduce using rule 19 (ImplementClass)

    ImplementClass  go to state 33


State 28

   22 InterfaceDecl: _interface _id _leftbrace . Prototype _rightbrace

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    $default  reduce using rule 24 (Prototype)

    Type       go to state 34
    Prototype  go to state 35


State 29

   13 Type: Type _leftbracket _rightbracket .

    $default  reduce using rule 13 (Type)


State 30

   30 FunctionDecl: Type _id _leftparen . Formals _rightparen StmtBlock

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    $default  reduce using rule 27 (Formals)

    Variable  go to state 36
    Type      go to state 37
    Formals   go to state 38


State 31

   16 ExtendClass: _extends _id .

    $default  reduce using rule 16 (ExtendClass)


State 32

   18 ImplementClass: _implements . ImplInterface

    _id  shift, and go to state 39

    ImplInterface  go to state 40


State 33

   15 ClassDecl: _class _id ExtendClass ImplementClass . _leftbrace Field _rightbrace

    _leftbrace  shift, and go to state 41


State 34

   13 Type: Type . _leftbracket _rightbracket
   23 Prototype: Type . _id _leftparen Formals _rightparen _semicolon Prototype

    _leftbracket  shift, and go to state 21
    _id           shift, and go to state 42


State 35

   22 InterfaceDecl: _interface _id _leftbrace Prototype . _rightbrace

    _rightbrace  shift, and go to state 43


State 36

   25 Formals: Variable .
   26        | Variable . _comma Formals

    _comma  shift, and go to state 44

    $default  reduce using rule 25 (Formals)


State 37

    8 Variable: Type . _id
   13 Type: Type . _leftbracket _rightbracket

    _leftbracket  shift, and go to state 21
    _id           shift, and go to state 45


State 38

   30 FunctionDecl: Type _id _leftparen Formals . _rightparen StmtBlock

    _rightparen  shift, and go to state 46


State 39

   20 ImplInterface: _id .
   21              | _id . _comma ImplInterface

    _comma  shift, and go to state 47

    $default  reduce using rule 20 (ImplInterface)


State 40

   18 ImplementClass: _implements ImplInterface .

    $default  reduce using rule 18 (ImplementClass)


State 41

   15 ClassDecl: _class _id ExtendClass ImplementClass _leftbrace . Field _rightbrace

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    $default  reduce using rule 29 (Field)

    VariableDecl  go to state 48
    Variable      go to state 11
    Type          go to state 37
    Field         go to state 49


State 42

   23 Prototype: Type _id . _leftparen Formals _rightparen _semicolon Prototype

    _leftparen  shift, and go to state 50


State 43

   22 InterfaceDecl: _interface _id _leftbrace Prototype _rightbrace .

    $default  reduce using rule 22 (InterfaceDecl)


State 44

   26 Formals: Variable _comma . Formals

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    $default  reduce using rule 27 (Formals)

    Variable  go to state 36
    Type      go to state 37
    Formals   go to state 51


State 45

    8 Variable: Type _id .

    $default  reduce using rule 8 (Variable)


State 46

   30 FunctionDecl: Type _id _leftparen Formals _rightparen . StmtBlock

    _leftbrace  shift, and go to state 52

    StmtBlock  go to state 53


State 47

   21 ImplInterface: _id _comma . ImplInterface

    _id  shift, and go to state 39

    ImplInterface  go to state 54


State 48

   28 Field: VariableDecl .

    $default  reduce using rule 28 (Field)


State 49

   15 ClassDecl: _class _id ExtendClass ImplementClass _leftbrace Field . _rightbrace

    _rightbrace  shift, and go to state 55


State 50

   23 Prototype: Type _id _leftparen . Formals _rightparen _semicolon Prototype

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    $default  reduce using rule 27 (Formals)

    Variable  go to state 36
    Type      go to state 37
    Formals   go to state 56


State 51

   26 Formals: Variable _comma Formals .

    $default  reduce using rule 26 (Formals)


State 52

   31 StmtBlock: _leftbrace . StmtDeclares Stmt _rightbrace

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    _id       [reduce using rule 33 (StmtDeclares)]
    $default  reduce using rule 33 (StmtDeclares)

    VariableDecl  go to state 57
    Variable      go to state 11
    Type          go to state 37
    StmtDeclares  go to state 58


State 53

   30 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock .

    $default  reduce using rule 30 (FunctionDecl)


State 54

   21 ImplInterface: _id _comma ImplInterface .

    $default  reduce using rule 21 (ImplInterface)


State 55

   15 ClassDecl: _class _id ExtendClass ImplementClass _leftbrace Field _rightbrace .

    $default  reduce using rule 15 (ClassDecl)


State 56

   23 Prototype: Type _id _leftparen Formals . _rightparen _semicolon Prototype

    _rightparen  shift, and go to state 59


State 57

   32 StmtDeclares: VariableDecl .

    $default  reduce using rule 32 (StmtDeclares)


State 58

   31 StmtBlock: _leftbrace StmtDeclares . Stmt _rightbrace

    _break            shift, and go to state 60
    _for              shift, and go to state 61
    _if               shift, and go to state 62
    _newarray         shift, and go to state 63
    _println          shift, and go to state 64
    _readln           shift, and go to state 65
    _return           shift, and go to state 66
    _while            shift, and go to state 67
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _leftbrace        shift, and go to state 52
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    $default  reduce using rule 42 (Stmt)

    StmtBlock   go to state 75
    Stmt        go to state 76
    Expr        go to state 77
    Lvalue      go to state 78
    Call        go to state 79
    Constant    go to state 80
    IfStmt      go to state 81
    WhileStmt   go to state 82
    ForStmt     go to state 83
    BreakStmt   go to state 84
    ReturnStmt  go to state 85
    PrintStmt   go to state 86


State 59

   23 Prototype: Type _id _leftparen Formals _rightparen . _semicolon Prototype

    _semicolon  shift, and go to state 87


State 60

   78 BreakStmt: _break . _semicolon

    _semicolon  shift, and go to state 88


State 61

   77 ForStmt: _for . _leftparen Expr _semicolon Expr _semicolon Expr _rightparen Stmt

    _leftparen  shift, and go to state 89


State 62

   75 IfStmt: _if . _leftparen Expr _rightparen Stmt

    _leftparen  shift, and go to state 90


State 63

   63 Expr: _newarray . _leftparen _intconstant _comma Type _rightparen

    _leftparen  shift, and go to state 91


State 64

   81 PrintStmt: _println . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 92
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 65

   62 Expr: _readln . _leftparen _rightparen

    _leftparen  shift, and go to state 93


State 66

   79 ReturnStmt: _return . Expr _semicolon
   80           | _return . _semicolon

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _semicolon        shift, and go to state 94
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 95
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 67

   76 WhileStmt: _while . _leftparen Expr _rightparen Stmt

    _leftparen  shift, and go to state 96


State 68

   52 Expr: _minus . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 97
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 69

   61 Expr: _not . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 98
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 70

   71 Constant: _intconstant .

    $default  reduce using rule 71 (Constant)


State 71

   72 Constant: _doubleconstant .

    $default  reduce using rule 72 (Constant)


State 72

   73 Constant: _stringconstant .

    $default  reduce using rule 73 (Constant)


State 73

   74 Constant: _booleanconstant .

    $default  reduce using rule 74 (Constant)


State 74

   64 Lvalue: _id . LHelper
   68 Call: _id . _leftparen Actuals _rightparen
   69     | _id . _period _id _leftparen Actuals _rightparen

    _period       shift, and go to state 99
    _leftparen    shift, and go to state 100
    _leftbracket  shift, and go to state 101

    $default  reduce using rule 67 (LHelper)

    LHelper  go to state 102


State 75

   41 Stmt: StmtBlock .

    $default  reduce using rule 41 (Stmt)


State 76

   31 StmtBlock: _leftbrace StmtDeclares Stmt . _rightbrace

    _rightbrace  shift, and go to state 103


State 77

   34 Stmt: Expr . _semicolon Stmt
   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr

    _plus            shift, and go to state 104
    _minus           shift, and go to state 105
    _multiplication  shift, and go to state 106
    _division        shift, and go to state 107
    _mod             shift, and go to state 108
    _less            shift, and go to state 109
    _lessequal       shift, and go to state 110
    _greater         shift, and go to state 111
    _equal           shift, and go to state 112
    _notequal        shift, and go to state 113
    _and             shift, and go to state 114
    _or              shift, and go to state 115
    _semicolon       shift, and go to state 116
    _greaterequal    shift, and go to state 117


State 78

   43 Expr: Lvalue . _assignop Expr
   45     | Lvalue .

    _assignop  shift, and go to state 118

    $default  reduce using rule 45 (Expr)


State 79

   46 Expr: Call .

    $default  reduce using rule 46 (Expr)


State 80

   44 Expr: Constant .

    $default  reduce using rule 44 (Expr)


State 81

   35 Stmt: IfStmt .

    $default  reduce using rule 35 (Stmt)


State 82

   36 Stmt: WhileStmt .

    $default  reduce using rule 36 (Stmt)


State 83

   37 Stmt: ForStmt .

    $default  reduce using rule 37 (Stmt)


State 84

   38 Stmt: BreakStmt .

    $default  reduce using rule 38 (Stmt)


State 85

   39 Stmt: ReturnStmt .

    $default  reduce using rule 39 (Stmt)


State 86

   40 Stmt: PrintStmt .

    $default  reduce using rule 40 (Stmt)


State 87

   23 Prototype: Type _id _leftparen Formals _rightparen _semicolon . Prototype

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    $default  reduce using rule 24 (Prototype)

    Type       go to state 34
    Prototype  go to state 119


State 88

   78 BreakStmt: _break _semicolon .

    $default  reduce using rule 78 (BreakStmt)


State 89

   77 ForStmt: _for _leftparen . Expr _semicolon Expr _semicolon Expr _rightparen Stmt

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 120
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 90

   75 IfStmt: _if _leftparen . Expr _rightparen Stmt

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 121
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 91

   63 Expr: _newarray _leftparen . _intconstant _comma Type _rightparen

    _intconstant  shift, and go to state 122


State 92

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr
   81 PrintStmt: _println Expr .

    _plus            shift, and go to state 104
    _minus           shift, and go to state 105
    _multiplication  shift, and go to state 106
    _division        shift, and go to state 107
    _mod             shift, and go to state 108
    _less            shift, and go to state 109
    _lessequal       shift, and go to state 110
    _greater         shift, and go to state 111
    _equal           shift, and go to state 112
    _notequal        shift, and go to state 113
    _and             shift, and go to state 114
    _or              shift, and go to state 115
    _greaterequal    shift, and go to state 117

    $default  reduce using rule 81 (PrintStmt)


State 93

   62 Expr: _readln _leftparen . _rightparen

    _rightparen  shift, and go to state 123


State 94

   80 ReturnStmt: _return _semicolon .

    $default  reduce using rule 80 (ReturnStmt)


State 95

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr
   79 ReturnStmt: _return Expr . _semicolon

    _plus            shift, and go to state 104
    _minus           shift, and go to state 105
    _multiplication  shift, and go to state 106
    _division        shift, and go to state 107
    _mod             shift, and go to state 108
    _less            shift, and go to state 109
    _lessequal       shift, and go to state 110
    _greater         shift, and go to state 111
    _equal           shift, and go to state 112
    _notequal        shift, and go to state 113
    _and             shift, and go to state 114
    _or              shift, and go to state 115
    _semicolon       shift, and go to state 124
    _greaterequal    shift, and go to state 117


State 96

   76 WhileStmt: _while _leftparen . Expr _rightparen Stmt

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 125
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 97

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   52     | _minus Expr .
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr

    _less          shift, and go to state 109
    _lessequal     shift, and go to state 110
    _greater       shift, and go to state 111
    _equal         shift, and go to state 112
    _notequal      shift, and go to state 113
    _and           shift, and go to state 114
    _or            shift, and go to state 115
    _greaterequal  shift, and go to state 117

    $default  reduce using rule 52 (Expr)


State 98

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr
   61     | _not Expr .

    _less          shift, and go to state 109
    _lessequal     shift, and go to state 110
    _greater       shift, and go to state 111
    _equal         shift, and go to state 112
    _notequal      shift, and go to state 113
    _and           shift, and go to state 114
    _or            shift, and go to state 115
    _greaterequal  shift, and go to state 117

    $default  reduce using rule 61 (Expr)


State 99

   66 LHelper: _period . _id LHelper
   69 Call: _id _period . _id _leftparen Actuals _rightparen

    _id  shift, and go to state 126


State 100

   68 Call: _id _leftparen . Actuals _rightparen

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 127
    Lvalue    go to state 78
    Call      go to state 79
    Actuals   go to state 128
    Constant  go to state 80


State 101

   65 LHelper: _leftbracket . Expr _rightbracket LHelper

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 129
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 102

   64 Lvalue: _id LHelper .

    $default  reduce using rule 64 (Lvalue)


State 103

   31 StmtBlock: _leftbrace StmtDeclares Stmt _rightbrace .

    $default  reduce using rule 31 (StmtBlock)


State 104

   47 Expr: Expr _plus . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 130
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 105

   48 Expr: Expr _minus . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 131
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 106

   49 Expr: Expr _multiplication . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 132
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 107

   50 Expr: Expr _division . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 133
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 108

   51 Expr: Expr _mod . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 134
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 109

   53 Expr: Expr _less . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 135
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 110

   54 Expr: Expr _lessequal . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 136
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 111

   55 Expr: Expr _greater . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 137
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 112

   57 Expr: Expr _equal . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 138
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 113

   58 Expr: Expr _notequal . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 139
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 114

   59 Expr: Expr _and . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 140
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 115

   60 Expr: Expr _or . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 141
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 116

   34 Stmt: Expr _semicolon . Stmt

    _break            shift, and go to state 60
    _for              shift, and go to state 61
    _if               shift, and go to state 62
    _newarray         shift, and go to state 63
    _println          shift, and go to state 64
    _readln           shift, and go to state 65
    _return           shift, and go to state 66
    _while            shift, and go to state 67
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _leftbrace        shift, and go to state 52
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    $default  reduce using rule 42 (Stmt)

    StmtBlock   go to state 75
    Stmt        go to state 142
    Expr        go to state 77
    Lvalue      go to state 78
    Call        go to state 79
    Constant    go to state 80
    IfStmt      go to state 81
    WhileStmt   go to state 82
    ForStmt     go to state 83
    BreakStmt   go to state 84
    ReturnStmt  go to state 85
    PrintStmt   go to state 86


State 117

   56 Expr: Expr _greaterequal . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 143
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 118

   43 Expr: Lvalue _assignop . Expr

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 144
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 119

   23 Prototype: Type _id _leftparen Formals _rightparen _semicolon Prototype .

    $default  reduce using rule 23 (Prototype)


State 120

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr
   77 ForStmt: _for _leftparen Expr . _semicolon Expr _semicolon Expr _rightparen Stmt

    _plus            shift, and go to state 104
    _minus           shift, and go to state 105
    _multiplication  shift, and go to state 106
    _division        shift, and go to state 107
    _mod             shift, and go to state 108
    _less            shift, and go to state 109
    _lessequal       shift, and go to state 110
    _greater         shift, and go to state 111
    _equal           shift, and go to state 112
    _notequal        shift, and go to state 113
    _and             shift, and go to state 114
    _or              shift, and go to state 115
    _semicolon       shift, and go to state 145
    _greaterequal    shift, and go to state 117


State 121

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr
   75 IfStmt: _if _leftparen Expr . _rightparen Stmt

    _plus            shift, and go to state 104
    _minus           shift, and go to state 105
    _multiplication  shift, and go to state 106
    _division        shift, and go to state 107
    _mod             shift, and go to state 108
    _less            shift, and go to state 109
    _lessequal       shift, and go to state 110
    _greater         shift, and go to state 111
    _equal           shift, and go to state 112
    _notequal        shift, and go to state 113
    _and             shift, and go to state 114
    _or              shift, and go to state 115
    _rightparen      shift, and go to state 146
    _greaterequal    shift, and go to state 117


State 122

   63 Expr: _newarray _leftparen _intconstant . _comma Type _rightparen

    _comma  shift, and go to state 147


State 123

   62 Expr: _readln _leftparen _rightparen .

    $default  reduce using rule 62 (Expr)


State 124

   79 ReturnStmt: _return Expr _semicolon .

    $default  reduce using rule 79 (ReturnStmt)


State 125

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr
   76 WhileStmt: _while _leftparen Expr . _rightparen Stmt

    _plus            shift, and go to state 104
    _minus           shift, and go to state 105
    _multiplication  shift, and go to state 106
    _division        shift, and go to state 107
    _mod             shift, and go to state 108
    _less            shift, and go to state 109
    _lessequal       shift, and go to state 110
    _greater         shift, and go to state 111
    _equal           shift, and go to state 112
    _notequal        shift, and go to state 113
    _and             shift, and go to state 114
    _or              shift, and go to state 115
    _rightparen      shift, and go to state 148
    _greaterequal    shift, and go to state 117


State 126

   66 LHelper: _period _id . LHelper
   69 Call: _id _period _id . _leftparen Actuals _rightparen

    _period       shift, and go to state 149
    _leftparen    shift, and go to state 150
    _leftbracket  shift, and go to state 101

    $default  reduce using rule 67 (LHelper)

    LHelper  go to state 151


State 127

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr
   70 Actuals: Expr .

    _plus            shift, and go to state 104
    _minus           shift, and go to state 105
    _multiplication  shift, and go to state 106
    _division        shift, and go to state 107
    _mod             shift, and go to state 108
    _less            shift, and go to state 109
    _lessequal       shift, and go to state 110
    _greater         shift, and go to state 111
    _equal           shift, and go to state 112
    _notequal        shift, and go to state 113
    _and             shift, and go to state 114
    _or              shift, and go to state 115
    _greaterequal    shift, and go to state 117

    $default  reduce using rule 70 (Actuals)


State 128

   68 Call: _id _leftparen Actuals . _rightparen

    _rightparen  shift, and go to state 152


State 129

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr
   65 LHelper: _leftbracket Expr . _rightbracket LHelper

    _plus            shift, and go to state 104
    _minus           shift, and go to state 105
    _multiplication  shift, and go to state 106
    _division        shift, and go to state 107
    _mod             shift, and go to state 108
    _less            shift, and go to state 109
    _lessequal       shift, and go to state 110
    _greater         shift, and go to state 111
    _equal           shift, and go to state 112
    _notequal        shift, and go to state 113
    _and             shift, and go to state 114
    _or              shift, and go to state 115
    _rightbracket    shift, and go to state 153
    _greaterequal    shift, and go to state 117


State 130

   47 Expr: Expr . _plus Expr
   47     | Expr _plus Expr .
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr

    _less          shift, and go to state 109
    _lessequal     shift, and go to state 110
    _greater       shift, and go to state 111
    _equal         shift, and go to state 112
    _notequal      shift, and go to state 113
    _and           shift, and go to state 114
    _or            shift, and go to state 115
    _greaterequal  shift, and go to state 117

    $default  reduce using rule 47 (Expr)


State 131

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   48     | Expr _minus Expr .
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr

    _less          shift, and go to state 109
    _lessequal     shift, and go to state 110
    _greater       shift, and go to state 111
    _equal         shift, and go to state 112
    _notequal      shift, and go to state 113
    _and           shift, and go to state 114
    _or            shift, and go to state 115
    _greaterequal  shift, and go to state 117

    $default  reduce using rule 48 (Expr)


State 132

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   49     | Expr _multiplication Expr .
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr

    _plus          shift, and go to state 104
    _minus         shift, and go to state 105
    _less          shift, and go to state 109
    _lessequal     shift, and go to state 110
    _greater       shift, and go to state 111
    _equal         shift, and go to state 112
    _notequal      shift, and go to state 113
    _and           shift, and go to state 114
    _or            shift, and go to state 115
    _greaterequal  shift, and go to state 117

    $default  reduce using rule 49 (Expr)


State 133

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   50     | Expr _division Expr .
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr

    _plus          shift, and go to state 104
    _minus         shift, and go to state 105
    _less          shift, and go to state 109
    _lessequal     shift, and go to state 110
    _greater       shift, and go to state 111
    _equal         shift, and go to state 112
    _notequal      shift, and go to state 113
    _and           shift, and go to state 114
    _or            shift, and go to state 115
    _greaterequal  shift, and go to state 117

    $default  reduce using rule 50 (Expr)


State 134

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   51     | Expr _mod Expr .
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr

    _plus          shift, and go to state 104
    _minus         shift, and go to state 105
    _less          shift, and go to state 109
    _lessequal     shift, and go to state 110
    _greater       shift, and go to state 111
    _equal         shift, and go to state 112
    _notequal      shift, and go to state 113
    _and           shift, and go to state 114
    _or            shift, and go to state 115
    _greaterequal  shift, and go to state 117

    $default  reduce using rule 51 (Expr)


State 135

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   53     | Expr _less Expr .
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr

    _equal     shift, and go to state 112
    _notequal  shift, and go to state 113
    _and       shift, and go to state 114
    _or        shift, and go to state 115

    $default  reduce using rule 53 (Expr)


State 136

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   54     | Expr _lessequal Expr .
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr

    _equal     shift, and go to state 112
    _notequal  shift, and go to state 113
    _and       shift, and go to state 114
    _or        shift, and go to state 115

    $default  reduce using rule 54 (Expr)


State 137

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   55     | Expr _greater Expr .
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr

    _equal     shift, and go to state 112
    _notequal  shift, and go to state 113
    _and       shift, and go to state 114
    _or        shift, and go to state 115

    $default  reduce using rule 55 (Expr)


State 138

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   57     | Expr _equal Expr .
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr

    _and  shift, and go to state 114
    _or   shift, and go to state 115

    $default  reduce using rule 57 (Expr)


State 139

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   58     | Expr _notequal Expr .
   59     | Expr . _and Expr
   60     | Expr . _or Expr

    _and  shift, and go to state 114
    _or   shift, and go to state 115

    $default  reduce using rule 58 (Expr)


State 140

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   59     | Expr _and Expr .
   60     | Expr . _or Expr

    _or  shift, and go to state 115

    $default  reduce using rule 59 (Expr)


State 141

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr
   60     | Expr _or Expr .

    $default  reduce using rule 60 (Expr)


State 142

   34 Stmt: Expr _semicolon Stmt .

    $default  reduce using rule 34 (Stmt)


State 143

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   56     | Expr _greaterequal Expr .
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr

    _equal     shift, and go to state 112
    _notequal  shift, and go to state 113
    _and       shift, and go to state 114
    _or        shift, and go to state 115

    $default  reduce using rule 56 (Expr)


State 144

   43 Expr: Lvalue _assignop Expr .
   47     | Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr

    $default  reduce using rule 43 (Expr)


State 145

   77 ForStmt: _for _leftparen Expr _semicolon . Expr _semicolon Expr _rightparen Stmt

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 154
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 146

   75 IfStmt: _if _leftparen Expr _rightparen . Stmt

    _break            shift, and go to state 60
    _for              shift, and go to state 61
    _if               shift, and go to state 62
    _newarray         shift, and go to state 63
    _println          shift, and go to state 64
    _readln           shift, and go to state 65
    _return           shift, and go to state 66
    _while            shift, and go to state 67
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _leftbrace        shift, and go to state 52
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    $default  reduce using rule 42 (Stmt)

    StmtBlock   go to state 75
    Stmt        go to state 155
    Expr        go to state 77
    Lvalue      go to state 78
    Call        go to state 79
    Constant    go to state 80
    IfStmt      go to state 81
    WhileStmt   go to state 82
    ForStmt     go to state 83
    BreakStmt   go to state 84
    ReturnStmt  go to state 85
    PrintStmt   go to state 86


State 147

   63 Expr: _newarray _leftparen _intconstant _comma . Type _rightparen

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 7

    Type  go to state 156


State 148

   76 WhileStmt: _while _leftparen Expr _rightparen . Stmt

    _break            shift, and go to state 60
    _for              shift, and go to state 61
    _if               shift, and go to state 62
    _newarray         shift, and go to state 63
    _println          shift, and go to state 64
    _readln           shift, and go to state 65
    _return           shift, and go to state 66
    _while            shift, and go to state 67
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _leftbrace        shift, and go to state 52
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    $default  reduce using rule 42 (Stmt)

    StmtBlock   go to state 75
    Stmt        go to state 157
    Expr        go to state 77
    Lvalue      go to state 78
    Call        go to state 79
    Constant    go to state 80
    IfStmt      go to state 81
    WhileStmt   go to state 82
    ForStmt     go to state 83
    BreakStmt   go to state 84
    ReturnStmt  go to state 85
    PrintStmt   go to state 86


State 149

   66 LHelper: _period . _id LHelper

    _id  shift, and go to state 158


State 150

   69 Call: _id _period _id _leftparen . Actuals _rightparen

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 127
    Lvalue    go to state 78
    Call      go to state 79
    Actuals   go to state 159
    Constant  go to state 80


State 151

   66 LHelper: _period _id LHelper .

    $default  reduce using rule 66 (LHelper)


State 152

   68 Call: _id _leftparen Actuals _rightparen .

    $default  reduce using rule 68 (Call)


State 153

   65 LHelper: _leftbracket Expr _rightbracket . LHelper

    _period       shift, and go to state 149
    _leftbracket  shift, and go to state 101

    $default  reduce using rule 67 (LHelper)

    LHelper  go to state 160


State 154

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr
   77 ForStmt: _for _leftparen Expr _semicolon Expr . _semicolon Expr _rightparen Stmt

    _plus            shift, and go to state 104
    _minus           shift, and go to state 105
    _multiplication  shift, and go to state 106
    _division        shift, and go to state 107
    _mod             shift, and go to state 108
    _less            shift, and go to state 109
    _lessequal       shift, and go to state 110
    _greater         shift, and go to state 111
    _equal           shift, and go to state 112
    _notequal        shift, and go to state 113
    _and             shift, and go to state 114
    _or              shift, and go to state 115
    _semicolon       shift, and go to state 161
    _greaterequal    shift, and go to state 117


State 155

   75 IfStmt: _if _leftparen Expr _rightparen Stmt .

    $default  reduce using rule 75 (IfStmt)


State 156

   13 Type: Type . _leftbracket _rightbracket
   63 Expr: _newarray _leftparen _intconstant _comma Type . _rightparen

    _rightparen   shift, and go to state 162
    _leftbracket  shift, and go to state 21


State 157

   76 WhileStmt: _while _leftparen Expr _rightparen Stmt .

    $default  reduce using rule 76 (WhileStmt)


State 158

   66 LHelper: _period _id . LHelper

    _period       shift, and go to state 149
    _leftbracket  shift, and go to state 101

    $default  reduce using rule 67 (LHelper)

    LHelper  go to state 151


State 159

   69 Call: _id _period _id _leftparen Actuals . _rightparen

    _rightparen  shift, and go to state 163


State 160

   65 LHelper: _leftbracket Expr _rightbracket LHelper .

    $default  reduce using rule 65 (LHelper)


State 161

   77 ForStmt: _for _leftparen Expr _semicolon Expr _semicolon . Expr _rightparen Stmt

    _newarray         shift, and go to state 63
    _readln           shift, and go to state 65
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    Expr      go to state 164
    Lvalue    go to state 78
    Call      go to state 79
    Constant  go to state 80


State 162

   63 Expr: _newarray _leftparen _intconstant _comma Type _rightparen .

    $default  reduce using rule 63 (Expr)


State 163

   69 Call: _id _period _id _leftparen Actuals _rightparen .

    $default  reduce using rule 69 (Call)


State 164

   47 Expr: Expr . _plus Expr
   48     | Expr . _minus Expr
   49     | Expr . _multiplication Expr
   50     | Expr . _division Expr
   51     | Expr . _mod Expr
   53     | Expr . _less Expr
   54     | Expr . _lessequal Expr
   55     | Expr . _greater Expr
   56     | Expr . _greaterequal Expr
   57     | Expr . _equal Expr
   58     | Expr . _notequal Expr
   59     | Expr . _and Expr
   60     | Expr . _or Expr
   77 ForStmt: _for _leftparen Expr _semicolon Expr _semicolon Expr . _rightparen Stmt

    _plus            shift, and go to state 104
    _minus           shift, and go to state 105
    _multiplication  shift, and go to state 106
    _division        shift, and go to state 107
    _mod             shift, and go to state 108
    _less            shift, and go to state 109
    _lessequal       shift, and go to state 110
    _greater         shift, and go to state 111
    _equal           shift, and go to state 112
    _notequal        shift, and go to state 113
    _and             shift, and go to state 114
    _or              shift, and go to state 115
    _rightparen      shift, and go to state 165
    _greaterequal    shift, and go to state 117


State 165

   77 ForStmt: _for _leftparen Expr _semicolon Expr _semicolon Expr _rightparen . Stmt

    _break            shift, and go to state 60
    _for              shift, and go to state 61
    _if               shift, and go to state 62
    _newarray         shift, and go to state 63
    _println          shift, and go to state 64
    _readln           shift, and go to state 65
    _return           shift, and go to state 66
    _while            shift, and go to state 67
    _minus            shift, and go to state 68
    _not              shift, and go to state 69
    _leftbrace        shift, and go to state 52
    _intconstant      shift, and go to state 70
    _doubleconstant   shift, and go to state 71
    _stringconstant   shift, and go to state 72
    _booleanconstant  shift, and go to state 73
    _id               shift, and go to state 74

    $default  reduce using rule 42 (Stmt)

    StmtBlock   go to state 75
    Stmt        go to state 166
    Expr        go to state 77
    Lvalue      go to state 78
    Call        go to state 79
    Constant    go to state 80
    IfStmt      go to state 81
    WhileStmt   go to state 82
    ForStmt     go to state 83
    BreakStmt   go to state 84
    ReturnStmt  go to state 85
    PrintStmt   go to state 86


State 166

   77 ForStmt: _for _leftparen Expr _semicolon Expr _semicolon Expr _rightparen Stmt .

    $default  reduce using rule 77 (ForStmt)
