Terminals unused in grammar

   _false
   _true
   _epsilon
   _greaterequal


Rules useless in parser due to conflicts

   70 Expr: _not Expr

   78 Actuals: Expr
   79        | Actuals _comma Expr


State 105 conflicts: 2 shift/reduce
State 114 conflicts: 14 shift/reduce
State 123 conflicts: 29 shift/reduce
State 128 conflicts: 14 shift/reduce
State 130 conflicts: 8 shift/reduce, 26 reduce/reduce
State 131 conflicts: 8 shift/reduce, 26 reduce/reduce
State 132 conflicts: 14 shift/reduce
State 158 conflicts: 13 shift/reduce, 2 reduce/reduce
State 160 conflicts: 1 shift/reduce
State 163 conflicts: 13 shift/reduce, 2 reduce/reduce
State 166 conflicts: 14 shift/reduce
State 169 conflicts: 13 shift/reduce, 2 reduce/reduce
State 172 conflicts: 8 shift/reduce, 26 reduce/reduce
State 173 conflicts: 8 shift/reduce, 26 reduce/reduce
State 174 conflicts: 10 shift/reduce, 24 reduce/reduce
State 175 conflicts: 10 shift/reduce, 24 reduce/reduce
State 176 conflicts: 10 shift/reduce, 24 reduce/reduce
State 177 conflicts: 5 shift/reduce, 29 reduce/reduce
State 178 conflicts: 5 shift/reduce, 29 reduce/reduce
State 179 conflicts: 5 shift/reduce, 29 reduce/reduce
State 180 conflicts: 13 shift/reduce, 33 reduce/reduce
State 181 conflicts: 3 shift/reduce, 31 reduce/reduce
State 182 conflicts: 3 shift/reduce, 31 reduce/reduce
State 183 conflicts: 2 shift/reduce, 32 reduce/reduce
State 184 conflicts: 1 shift/reduce, 33 reduce/reduce
State 185 conflicts: 1 shift/reduce, 33 reduce/reduce
State 187 conflicts: 14 shift/reduce
State 189 conflicts: 8 shift/reduce, 23 reduce/reduce
State 199 conflicts: 14 shift/reduce
State 202 conflicts: 13 shift/reduce, 2 reduce/reduce
State 206 conflicts: 13 shift/reduce, 2 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: Decl
    2        | Program Decl

    3 Decl: VariableDecl _semicolon
    4     | FunctionDecl _semicolon
    5     | ClassDecl _semicolon
    6     | InterfaceDecl _semicolon

    7 VariableDecl: Variable _semicolon

    8 Variable: Type _id _semicolon

    9 Type: _int _semicolon
   10     | _double _semicolon
   11     | _boolean _semicolon
   12     | _string _semicolon
   13     | Type _leftbracket _rightbracket _semicolon
   14     | _id _semicolon

   15 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock _semicolon
   16             | _void _id _leftparen Formals _rightparen StmtBlock _semicolon

   17 Formals: Variable _plus ';'
   18        | ""

   19 ClassDecl: _class _id _leftbrace Field _rightbrace ';'
   20          | _class _id _extends _id _leftbrace Field _rightbrace ';'
   21          | _class _id _extends _id _implements ClassIds _leftbrace Field _rightbrace ';'

   22 ClassIds: _id
   23         | ',' ClassIds

   24 Field: VariableDecl ';'
   25      | FunctionDecl ';'

   26 InterfaceDecl: _interface _id _leftbrace Prototype _rightbrace _semicolon

   27 Prototype: Type _id _leftparen Formals _rightparen _semicolon
   28          | _void _id _leftparen Formals _rightparen _semicolon

   29 StmtBlock: _leftbrace VariableDecl Stmt _rightbrace _semicolon

   30 Stmt: Expr _semicolon
   31     | IfStmt
   32     | WhileStmt
   33     | ForStmt
   34     | BreakStmt _semicolon
   35     | ReturnStmt _semicolon
   36     | PrintStmt _semicolon
   37     | StmtBlock

   38 IfStmt: _if Expr Stmt _else Stmt
   39       | _if Expr Stmt

   40 WhileStmt: _while _leftparen Expr _rightparen Stmt

   41 ForStmt: _for _leftparen ForExpr _semicolon Expr _semicolon ForExpr _rightparen Stmt

   42 ForExpr: Expr
   43        | %empty

   44 BreakStmt: _break _semicolon

   45 ReturnStmt: _return Expr _semicolon
   46           | _return _semicolon

   47 PrintStmt: _println _leftparen PrintEnc _rightparen _semicolon

   48 PrintEnc: Expr
   49         | PrintEnc _comma Expr

   50 Expr: Lvalue _assignop Expr
   51     | Constant
   52     | Lvalue
   53     | Call
   54     | _leftparen Expr _rightparen
   55     | Expr _plus Expr
   56     | Expr _minus Expr
   57     | Expr _multiplication Expr
   58     | Expr _division Expr
   59     | Expr _mod Expr
   60     | _minus Expr
   61     | Expr _less Expr
   62     | Expr _lessequal Expr
   63     | Expr _greater Expr
   64     | Expr _greatereequal Expr
   65     | Expr _equal Expr
   66     | Expr _notequal Expr
   67     | Expr _and Expr
   68     | Expr _or Expr
   69     | Expr
   70     | _not Expr
   71     | _readln _leftparen _rightparen
   72     | _newarray _leftparen _intconstant _comma Type _rightparen

   73 Lvalue: _id
   74       | Lvalue _leftbracket Expr _rightbracket
   75       | Lvalue _period _id

   76 Call: _id _leftparen Actuals _rightparen
   77     | _id _period _id _leftparen Actuals _rightparen

   78 Actuals: Expr
   79        | Actuals _comma Expr
   80        | %empty

   81 Constant: _intconstant
   82         | _doubleconstant
   83         | _stringconstant
   84         | _booleanconstant


Terminals, with rules where they appear

$end (0) 0
',' (44) 23
';' (59) 17 19 20 21 24 25
error (256)
_boolean (258) 11
_break (259) 44
_class (260) 19 20 21
_double (261) 10
_else (262) 38
_extends (263) 20 21
_false (264)
_for (265) 41
_if (266) 38 39
_implements (267) 21
_int (268) 9
_interface (269) 26
_newarray (270) 72
_println (271) 47
_readln (272) 71
_return (273) 45 46
_string (274) 12
_true (275)
_void (276) 16 28
_while (277) 40
_plus (278) 17 55
_minus (279) 56 60
_multiplication (280) 57
_division (281) 58
_mod (282) 59
_less (283) 61
_lessequal (284) 62
_greater (285) 63
_greatereequal (286) 64
_equal (287) 65
_notequal (288) 66
_and (289) 67
_or (290) 68
_not (291) 70
_assignop (292) 50
_semicolon (293) 3 4 5 6 7 8 9 10 11 12 13 14 15 16 26 27 28 29 30
    34 35 36 41 44 45 46 47
_comma (294) 49 72 79
_period (295) 75 77
_leftparen (296) 15 16 27 28 40 41 47 54 71 72 76 77
_rightparen (297) 15 16 27 28 40 41 47 54 71 72 76 77
_leftbracket (298) 13 74
_rightbracket (299) 13 74
_leftbrace (300) 19 20 21 26 29
_rightbrace (301) 19 20 21 26 29
_intconstant (302) 72 81
_doubleconstant (303) 82
_stringconstant (304) 83
_booleanconstant (305) 84
_id (306) 8 14 15 16 19 20 21 22 26 27 28 73 75 76 77
_epsilon (307)
_greaterequal (308)
"" (309) 18


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
Program (58)
    on left: 1 2, on right: 0 2
Decl (59)
    on left: 3 4 5 6, on right: 1 2
VariableDecl (60)
    on left: 7, on right: 3 24 29
Variable (61)
    on left: 8, on right: 7 17
Type (62)
    on left: 9 10 11 12 13 14, on right: 8 13 15 27 72
FunctionDecl (63)
    on left: 15 16, on right: 4 25
Formals (64)
    on left: 17 18, on right: 15 16 27 28
ClassDecl (65)
    on left: 19 20 21, on right: 5
ClassIds (66)
    on left: 22 23, on right: 21 23
Field (67)
    on left: 24 25, on right: 19 20 21
InterfaceDecl (68)
    on left: 26, on right: 6
Prototype (69)
    on left: 27 28, on right: 26
StmtBlock (70)
    on left: 29, on right: 15 16 37
Stmt (71)
    on left: 30 31 32 33 34 35 36 37, on right: 29 38 39 40 41
IfStmt (72)
    on left: 38 39, on right: 31
WhileStmt (73)
    on left: 40, on right: 32
ForStmt (74)
    on left: 41, on right: 33
ForExpr (75)
    on left: 42 43, on right: 41
BreakStmt (76)
    on left: 44, on right: 34
ReturnStmt (77)
    on left: 45 46, on right: 35
PrintStmt (78)
    on left: 47, on right: 36
PrintEnc (79)
    on left: 48 49, on right: 47 49
Expr (80)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
    68 69 70 71 72, on right: 30 38 39 40 41 42 45 48 49 50 54 55 56
    57 58 59 60 61 62 63 64 65 66 67 68 69 70 74 78 79
Lvalue (81)
    on left: 73 74 75, on right: 50 52 74 75
Call (82)
    on left: 76 77, on right: 53
Actuals (83)
    on left: 78 79 80, on right: 76 77 79
Constant (84)
    on left: 81 82 83 84, on right: 51


State 0

    0 $accept: . Program $end

    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    Program        go to state 9
    Decl           go to state 10
    VariableDecl   go to state 11
    Variable       go to state 12
    Type           go to state 13
    FunctionDecl   go to state 14
    ClassDecl      go to state 15
    InterfaceDecl  go to state 16


State 1

   11 Type: _boolean . _semicolon

    _semicolon  shift, and go to state 17


State 2

   19 ClassDecl: _class . _id _leftbrace Field _rightbrace ';'
   20          | _class . _id _extends _id _leftbrace Field _rightbrace ';'
   21          | _class . _id _extends _id _implements ClassIds _leftbrace Field _rightbrace ';'

    _id  shift, and go to state 18


State 3

   10 Type: _double . _semicolon

    _semicolon  shift, and go to state 19


State 4

    9 Type: _int . _semicolon

    _semicolon  shift, and go to state 20


State 5

   26 InterfaceDecl: _interface . _id _leftbrace Prototype _rightbrace _semicolon

    _id  shift, and go to state 21


State 6

   12 Type: _string . _semicolon

    _semicolon  shift, and go to state 22


State 7

   16 FunctionDecl: _void . _id _leftparen Formals _rightparen StmtBlock _semicolon

    _id  shift, and go to state 23


State 8

   14 Type: _id . _semicolon

    _semicolon  shift, and go to state 24


State 9

    0 $accept: Program . $end
    2 Program: Program . Decl

    $end        shift, and go to state 25
    _boolean    shift, and go to state 1
    _class      shift, and go to state 2
    _double     shift, and go to state 3
    _int        shift, and go to state 4
    _interface  shift, and go to state 5
    _string     shift, and go to state 6
    _void       shift, and go to state 7
    _id         shift, and go to state 8

    Decl           go to state 26
    VariableDecl   go to state 11
    Variable       go to state 12
    Type           go to state 13
    FunctionDecl   go to state 14
    ClassDecl      go to state 15
    InterfaceDecl  go to state 16


State 10

    1 Program: Decl .

    $default  reduce using rule 1 (Program)


State 11

    3 Decl: VariableDecl . _semicolon

    _semicolon  shift, and go to state 27


State 12

    7 VariableDecl: Variable . _semicolon

    _semicolon  shift, and go to state 28


State 13

    8 Variable: Type . _id _semicolon
   13 Type: Type . _leftbracket _rightbracket _semicolon
   15 FunctionDecl: Type . _id _leftparen Formals _rightparen StmtBlock _semicolon

    _leftbracket  shift, and go to state 29
    _id           shift, and go to state 30


State 14

    4 Decl: FunctionDecl . _semicolon

    _semicolon  shift, and go to state 31


State 15

    5 Decl: ClassDecl . _semicolon

    _semicolon  shift, and go to state 32


State 16

    6 Decl: InterfaceDecl . _semicolon

    _semicolon  shift, and go to state 33


State 17

   11 Type: _boolean _semicolon .

    $default  reduce using rule 11 (Type)


State 18

   19 ClassDecl: _class _id . _leftbrace Field _rightbrace ';'
   20          | _class _id . _extends _id _leftbrace Field _rightbrace ';'
   21          | _class _id . _extends _id _implements ClassIds _leftbrace Field _rightbrace ';'

    _extends    shift, and go to state 34
    _leftbrace  shift, and go to state 35


State 19

   10 Type: _double _semicolon .

    $default  reduce using rule 10 (Type)


State 20

    9 Type: _int _semicolon .

    $default  reduce using rule 9 (Type)


State 21

   26 InterfaceDecl: _interface _id . _leftbrace Prototype _rightbrace _semicolon

    _leftbrace  shift, and go to state 36


State 22

   12 Type: _string _semicolon .

    $default  reduce using rule 12 (Type)


State 23

   16 FunctionDecl: _void _id . _leftparen Formals _rightparen StmtBlock _semicolon

    _leftparen  shift, and go to state 37


State 24

   14 Type: _id _semicolon .

    $default  reduce using rule 14 (Type)


State 25

    0 $accept: Program $end .

    $default  accept


State 26

    2 Program: Program Decl .

    $default  reduce using rule 2 (Program)


State 27

    3 Decl: VariableDecl _semicolon .

    $default  reduce using rule 3 (Decl)


State 28

    7 VariableDecl: Variable _semicolon .

    $default  reduce using rule 7 (VariableDecl)


State 29

   13 Type: Type _leftbracket . _rightbracket _semicolon

    _rightbracket  shift, and go to state 38


State 30

    8 Variable: Type _id . _semicolon
   15 FunctionDecl: Type _id . _leftparen Formals _rightparen StmtBlock _semicolon

    _semicolon  shift, and go to state 39
    _leftparen  shift, and go to state 40


State 31

    4 Decl: FunctionDecl _semicolon .

    $default  reduce using rule 4 (Decl)


State 32

    5 Decl: ClassDecl _semicolon .

    $default  reduce using rule 5 (Decl)


State 33

    6 Decl: InterfaceDecl _semicolon .

    $default  reduce using rule 6 (Decl)


State 34

   20 ClassDecl: _class _id _extends . _id _leftbrace Field _rightbrace ';'
   21          | _class _id _extends . _id _implements ClassIds _leftbrace Field _rightbrace ';'

    _id  shift, and go to state 41


State 35

   19 ClassDecl: _class _id _leftbrace . Field _rightbrace ';'

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 7
    _id       shift, and go to state 8

    VariableDecl  go to state 42
    Variable      go to state 12
    Type          go to state 13
    FunctionDecl  go to state 43
    Field         go to state 44


State 36

   26 InterfaceDecl: _interface _id _leftbrace . Prototype _rightbrace _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 45
    _id       shift, and go to state 8

    Type       go to state 46
    Prototype  go to state 47


State 37

   16 FunctionDecl: _void _id _leftparen . Formals _rightparen StmtBlock _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8
    ""        shift, and go to state 48

    Variable  go to state 49
    Type      go to state 50
    Formals   go to state 51


State 38

   13 Type: Type _leftbracket _rightbracket . _semicolon

    _semicolon  shift, and go to state 52


State 39

    8 Variable: Type _id _semicolon .

    $default  reduce using rule 8 (Variable)


State 40

   15 FunctionDecl: Type _id _leftparen . Formals _rightparen StmtBlock _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8
    ""        shift, and go to state 48

    Variable  go to state 49
    Type      go to state 50
    Formals   go to state 53


State 41

   20 ClassDecl: _class _id _extends _id . _leftbrace Field _rightbrace ';'
   21          | _class _id _extends _id . _implements ClassIds _leftbrace Field _rightbrace ';'

    _implements  shift, and go to state 54
    _leftbrace   shift, and go to state 55


State 42

   24 Field: VariableDecl . ';'

    ';'  shift, and go to state 56


State 43

   25 Field: FunctionDecl . ';'

    ';'  shift, and go to state 57


State 44

   19 ClassDecl: _class _id _leftbrace Field . _rightbrace ';'

    _rightbrace  shift, and go to state 58


State 45

   28 Prototype: _void . _id _leftparen Formals _rightparen _semicolon

    _id  shift, and go to state 59


State 46

   13 Type: Type . _leftbracket _rightbracket _semicolon
   27 Prototype: Type . _id _leftparen Formals _rightparen _semicolon

    _leftbracket  shift, and go to state 29
    _id           shift, and go to state 60


State 47

   26 InterfaceDecl: _interface _id _leftbrace Prototype . _rightbrace _semicolon

    _rightbrace  shift, and go to state 61


State 48

   18 Formals: "" .

    $default  reduce using rule 18 (Formals)


State 49

   17 Formals: Variable . _plus ';'

    _plus  shift, and go to state 62


State 50

    8 Variable: Type . _id _semicolon
   13 Type: Type . _leftbracket _rightbracket _semicolon

    _leftbracket  shift, and go to state 29
    _id           shift, and go to state 63


State 51

   16 FunctionDecl: _void _id _leftparen Formals . _rightparen StmtBlock _semicolon

    _rightparen  shift, and go to state 64


State 52

   13 Type: Type _leftbracket _rightbracket _semicolon .

    $default  reduce using rule 13 (Type)


State 53

   15 FunctionDecl: Type _id _leftparen Formals . _rightparen StmtBlock _semicolon

    _rightparen  shift, and go to state 65


State 54

   21 ClassDecl: _class _id _extends _id _implements . ClassIds _leftbrace Field _rightbrace ';'

    _id  shift, and go to state 66
    ','  shift, and go to state 67

    ClassIds  go to state 68


State 55

   20 ClassDecl: _class _id _extends _id _leftbrace . Field _rightbrace ';'

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 7
    _id       shift, and go to state 8

    VariableDecl  go to state 42
    Variable      go to state 12
    Type          go to state 13
    FunctionDecl  go to state 43
    Field         go to state 69


State 56

   24 Field: VariableDecl ';' .

    $default  reduce using rule 24 (Field)


State 57

   25 Field: FunctionDecl ';' .

    $default  reduce using rule 25 (Field)


State 58

   19 ClassDecl: _class _id _leftbrace Field _rightbrace . ';'

    ';'  shift, and go to state 70


State 59

   28 Prototype: _void _id . _leftparen Formals _rightparen _semicolon

    _leftparen  shift, and go to state 71


State 60

   27 Prototype: Type _id . _leftparen Formals _rightparen _semicolon

    _leftparen  shift, and go to state 72


State 61

   26 InterfaceDecl: _interface _id _leftbrace Prototype _rightbrace . _semicolon

    _semicolon  shift, and go to state 73


State 62

   17 Formals: Variable _plus . ';'

    ';'  shift, and go to state 74


State 63

    8 Variable: Type _id . _semicolon

    _semicolon  shift, and go to state 39


State 64

   16 FunctionDecl: _void _id _leftparen Formals _rightparen . StmtBlock _semicolon

    _leftbrace  shift, and go to state 75

    StmtBlock  go to state 76


State 65

   15 FunctionDecl: Type _id _leftparen Formals _rightparen . StmtBlock _semicolon

    _leftbrace  shift, and go to state 75

    StmtBlock  go to state 77


State 66

   22 ClassIds: _id .

    $default  reduce using rule 22 (ClassIds)


State 67

   23 ClassIds: ',' . ClassIds

    _id  shift, and go to state 66
    ','  shift, and go to state 67

    ClassIds  go to state 78


State 68

   21 ClassDecl: _class _id _extends _id _implements ClassIds . _leftbrace Field _rightbrace ';'

    _leftbrace  shift, and go to state 79


State 69

   20 ClassDecl: _class _id _extends _id _leftbrace Field . _rightbrace ';'

    _rightbrace  shift, and go to state 80


State 70

   19 ClassDecl: _class _id _leftbrace Field _rightbrace ';' .

    $default  reduce using rule 19 (ClassDecl)


State 71

   28 Prototype: _void _id _leftparen . Formals _rightparen _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8
    ""        shift, and go to state 48

    Variable  go to state 49
    Type      go to state 50
    Formals   go to state 81


State 72

   27 Prototype: Type _id _leftparen . Formals _rightparen _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8
    ""        shift, and go to state 48

    Variable  go to state 49
    Type      go to state 50
    Formals   go to state 82


State 73

   26 InterfaceDecl: _interface _id _leftbrace Prototype _rightbrace _semicolon .

    $default  reduce using rule 26 (InterfaceDecl)


State 74

   17 Formals: Variable _plus ';' .

    $default  reduce using rule 17 (Formals)


State 75

   29 StmtBlock: _leftbrace . VariableDecl Stmt _rightbrace _semicolon

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    VariableDecl  go to state 83
    Variable      go to state 12
    Type          go to state 50


State 76

   16 FunctionDecl: _void _id _leftparen Formals _rightparen StmtBlock . _semicolon

    _semicolon  shift, and go to state 84


State 77

   15 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock . _semicolon

    _semicolon  shift, and go to state 85


State 78

   23 ClassIds: ',' ClassIds .

    $default  reduce using rule 23 (ClassIds)


State 79

   21 ClassDecl: _class _id _extends _id _implements ClassIds _leftbrace . Field _rightbrace ';'

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _void     shift, and go to state 7
    _id       shift, and go to state 8

    VariableDecl  go to state 42
    Variable      go to state 12
    Type          go to state 13
    FunctionDecl  go to state 43
    Field         go to state 86


State 80

   20 ClassDecl: _class _id _extends _id _leftbrace Field _rightbrace . ';'

    ';'  shift, and go to state 87


State 81

   28 Prototype: _void _id _leftparen Formals . _rightparen _semicolon

    _rightparen  shift, and go to state 88


State 82

   27 Prototype: Type _id _leftparen Formals . _rightparen _semicolon

    _rightparen  shift, and go to state 89


State 83

   29 StmtBlock: _leftbrace VariableDecl . Stmt _rightbrace _semicolon

    _break            shift, and go to state 90
    _for              shift, and go to state 91
    _if               shift, and go to state 92
    _newarray         shift, and go to state 93
    _println          shift, and go to state 94
    _readln           shift, and go to state 95
    _return           shift, and go to state 96
    _while            shift, and go to state 97
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _leftbrace        shift, and go to state 75
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    StmtBlock   go to state 106
    Stmt        go to state 107
    IfStmt      go to state 108
    WhileStmt   go to state 109
    ForStmt     go to state 110
    BreakStmt   go to state 111
    ReturnStmt  go to state 112
    PrintStmt   go to state 113
    Expr        go to state 114
    Lvalue      go to state 115
    Call        go to state 116
    Constant    go to state 117


State 84

   16 FunctionDecl: _void _id _leftparen Formals _rightparen StmtBlock _semicolon .

    $default  reduce using rule 16 (FunctionDecl)


State 85

   15 FunctionDecl: Type _id _leftparen Formals _rightparen StmtBlock _semicolon .

    $default  reduce using rule 15 (FunctionDecl)


State 86

   21 ClassDecl: _class _id _extends _id _implements ClassIds _leftbrace Field . _rightbrace ';'

    _rightbrace  shift, and go to state 118


State 87

   20 ClassDecl: _class _id _extends _id _leftbrace Field _rightbrace ';' .

    $default  reduce using rule 20 (ClassDecl)


State 88

   28 Prototype: _void _id _leftparen Formals _rightparen . _semicolon

    _semicolon  shift, and go to state 119


State 89

   27 Prototype: Type _id _leftparen Formals _rightparen . _semicolon

    _semicolon  shift, and go to state 120


State 90

   44 BreakStmt: _break . _semicolon

    _semicolon  shift, and go to state 121


State 91

   41 ForStmt: _for . _leftparen ForExpr _semicolon Expr _semicolon ForExpr _rightparen Stmt

    _leftparen  shift, and go to state 122


State 92

   38 IfStmt: _if . Expr Stmt _else Stmt
   39       | _if . Expr Stmt

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 123
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 93

   72 Expr: _newarray . _leftparen _intconstant _comma Type _rightparen

    _leftparen  shift, and go to state 124


State 94

   47 PrintStmt: _println . _leftparen PrintEnc _rightparen _semicolon

    _leftparen  shift, and go to state 125


State 95

   71 Expr: _readln . _leftparen _rightparen

    _leftparen  shift, and go to state 126


State 96

   45 ReturnStmt: _return . Expr _semicolon
   46           | _return . _semicolon

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _semicolon        shift, and go to state 127
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 128
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 97

   40 WhileStmt: _while . _leftparen Expr _rightparen Stmt

    _leftparen  shift, and go to state 129


State 98

   60 Expr: _minus . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 130
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 99

   70 Expr: _not . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 131
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 100

   54 Expr: _leftparen . Expr _rightparen

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 132
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 101

   81 Constant: _intconstant .

    $default  reduce using rule 81 (Constant)


State 102

   82 Constant: _doubleconstant .

    $default  reduce using rule 82 (Constant)


State 103

   83 Constant: _stringconstant .

    $default  reduce using rule 83 (Constant)


State 104

   84 Constant: _booleanconstant .

    $default  reduce using rule 84 (Constant)


State 105

   73 Lvalue: _id .
   76 Call: _id . _leftparen Actuals _rightparen
   77     | _id . _period _id _leftparen Actuals _rightparen

    _period     shift, and go to state 133
    _leftparen  shift, and go to state 134

    _period     [reduce using rule 73 (Lvalue)]
    _leftparen  [reduce using rule 73 (Lvalue)]
    $default    reduce using rule 73 (Lvalue)


State 106

   37 Stmt: StmtBlock .

    $default  reduce using rule 37 (Stmt)


State 107

   29 StmtBlock: _leftbrace VariableDecl Stmt . _rightbrace _semicolon

    _rightbrace  shift, and go to state 135


State 108

   31 Stmt: IfStmt .

    $default  reduce using rule 31 (Stmt)


State 109

   32 Stmt: WhileStmt .

    $default  reduce using rule 32 (Stmt)


State 110

   33 Stmt: ForStmt .

    $default  reduce using rule 33 (Stmt)


State 111

   34 Stmt: BreakStmt . _semicolon

    _semicolon  shift, and go to state 136


State 112

   35 Stmt: ReturnStmt . _semicolon

    _semicolon  shift, and go to state 137


State 113

   36 Stmt: PrintStmt . _semicolon

    _semicolon  shift, and go to state 138


State 114

   30 Stmt: Expr . _semicolon
   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _plus            shift, and go to state 139
    _minus           shift, and go to state 140
    _multiplication  shift, and go to state 141
    _division        shift, and go to state 142
    _mod             shift, and go to state 143
    _less            shift, and go to state 144
    _lessequal       shift, and go to state 145
    _greater         shift, and go to state 146
    _greatereequal   shift, and go to state 147
    _equal           shift, and go to state 148
    _notequal        shift, and go to state 149
    _and             shift, and go to state 150
    _or              shift, and go to state 151
    _semicolon       shift, and go to state 152

    _plus            [reduce using rule 69 (Expr)]
    _minus           [reduce using rule 69 (Expr)]
    _multiplication  [reduce using rule 69 (Expr)]
    _division        [reduce using rule 69 (Expr)]
    _mod             [reduce using rule 69 (Expr)]
    _less            [reduce using rule 69 (Expr)]
    _lessequal       [reduce using rule 69 (Expr)]
    _greater         [reduce using rule 69 (Expr)]
    _greatereequal   [reduce using rule 69 (Expr)]
    _equal           [reduce using rule 69 (Expr)]
    _notequal        [reduce using rule 69 (Expr)]
    _and             [reduce using rule 69 (Expr)]
    _or              [reduce using rule 69 (Expr)]
    _semicolon       [reduce using rule 69 (Expr)]


State 115

   50 Expr: Lvalue . _assignop Expr
   52     | Lvalue .
   74 Lvalue: Lvalue . _leftbracket Expr _rightbracket
   75       | Lvalue . _period _id

    _assignop     shift, and go to state 153
    _period       shift, and go to state 154
    _leftbracket  shift, and go to state 155

    $default  reduce using rule 52 (Expr)


State 116

   53 Expr: Call .

    $default  reduce using rule 53 (Expr)


State 117

   51 Expr: Constant .

    $default  reduce using rule 51 (Expr)


State 118

   21 ClassDecl: _class _id _extends _id _implements ClassIds _leftbrace Field _rightbrace . ';'

    ';'  shift, and go to state 156


State 119

   28 Prototype: _void _id _leftparen Formals _rightparen _semicolon .

    $default  reduce using rule 28 (Prototype)


State 120

   27 Prototype: Type _id _leftparen Formals _rightparen _semicolon .

    $default  reduce using rule 27 (Prototype)


State 121

   44 BreakStmt: _break _semicolon .

    $default  reduce using rule 44 (BreakStmt)


State 122

   41 ForStmt: _for _leftparen . ForExpr _semicolon Expr _semicolon ForExpr _rightparen Stmt

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    $default  reduce using rule 43 (ForExpr)

    ForExpr   go to state 157
    Expr      go to state 158
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 123

   38 IfStmt: _if Expr . Stmt _else Stmt
   39       | _if Expr . Stmt
   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _break            shift, and go to state 90
    _for              shift, and go to state 91
    _if               shift, and go to state 92
    _newarray         shift, and go to state 93
    _println          shift, and go to state 94
    _readln           shift, and go to state 95
    _return           shift, and go to state 96
    _while            shift, and go to state 97
    _plus             shift, and go to state 139
    _minus            shift, and go to state 159
    _multiplication   shift, and go to state 141
    _division         shift, and go to state 142
    _mod              shift, and go to state 143
    _less             shift, and go to state 144
    _lessequal        shift, and go to state 145
    _greater          shift, and go to state 146
    _greatereequal    shift, and go to state 147
    _equal            shift, and go to state 148
    _notequal         shift, and go to state 149
    _and              shift, and go to state 150
    _or               shift, and go to state 151
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _leftbrace        shift, and go to state 75
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    _break            [reduce using rule 69 (Expr)]
    _for              [reduce using rule 69 (Expr)]
    _if               [reduce using rule 69 (Expr)]
    _newarray         [reduce using rule 69 (Expr)]
    _println          [reduce using rule 69 (Expr)]
    _readln           [reduce using rule 69 (Expr)]
    _return           [reduce using rule 69 (Expr)]
    _while            [reduce using rule 69 (Expr)]
    _plus             [reduce using rule 69 (Expr)]
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   [reduce using rule 69 (Expr)]
    _division         [reduce using rule 69 (Expr)]
    _mod              [reduce using rule 69 (Expr)]
    _less             [reduce using rule 69 (Expr)]
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            [reduce using rule 69 (Expr)]
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              [reduce using rule 69 (Expr)]
    _leftparen        [reduce using rule 69 (Expr)]
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               [reduce using rule 69 (Expr)]

    StmtBlock   go to state 106
    Stmt        go to state 160
    IfStmt      go to state 108
    WhileStmt   go to state 109
    ForStmt     go to state 110
    BreakStmt   go to state 111
    ReturnStmt  go to state 112
    PrintStmt   go to state 113
    Expr        go to state 114
    Lvalue      go to state 115
    Call        go to state 116
    Constant    go to state 117


State 124

   72 Expr: _newarray _leftparen . _intconstant _comma Type _rightparen

    _intconstant  shift, and go to state 161


State 125

   47 PrintStmt: _println _leftparen . PrintEnc _rightparen _semicolon

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    PrintEnc  go to state 162
    Expr      go to state 163
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 126

   71 Expr: _readln _leftparen . _rightparen

    _rightparen  shift, and go to state 164


State 127

   46 ReturnStmt: _return _semicolon .

    $default  reduce using rule 46 (ReturnStmt)


State 128

   45 ReturnStmt: _return Expr . _semicolon
   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _plus            shift, and go to state 139
    _minus           shift, and go to state 140
    _multiplication  shift, and go to state 141
    _division        shift, and go to state 142
    _mod             shift, and go to state 143
    _less            shift, and go to state 144
    _lessequal       shift, and go to state 145
    _greater         shift, and go to state 146
    _greatereequal   shift, and go to state 147
    _equal           shift, and go to state 148
    _notequal        shift, and go to state 149
    _and             shift, and go to state 150
    _or              shift, and go to state 151
    _semicolon       shift, and go to state 165

    _plus            [reduce using rule 69 (Expr)]
    _minus           [reduce using rule 69 (Expr)]
    _multiplication  [reduce using rule 69 (Expr)]
    _division        [reduce using rule 69 (Expr)]
    _mod             [reduce using rule 69 (Expr)]
    _less            [reduce using rule 69 (Expr)]
    _lessequal       [reduce using rule 69 (Expr)]
    _greater         [reduce using rule 69 (Expr)]
    _greatereequal   [reduce using rule 69 (Expr)]
    _equal           [reduce using rule 69 (Expr)]
    _notequal        [reduce using rule 69 (Expr)]
    _and             [reduce using rule 69 (Expr)]
    _or              [reduce using rule 69 (Expr)]
    _semicolon       [reduce using rule 69 (Expr)]


State 129

   40 WhileStmt: _while _leftparen . Expr _rightparen Stmt

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 166
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 130

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   60     | _minus Expr .
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _less           shift, and go to state 144
    _lessequal      shift, and go to state 145
    _greater        shift, and go to state 146
    _greatereequal  shift, and go to state 147
    _equal          shift, and go to state 148
    _notequal       shift, and go to state 149
    _and            shift, and go to state 150
    _or             shift, and go to state 151

    _break            reduce using rule 60 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 60 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 60 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 60 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 60 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 60 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 60 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 60 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             reduce using rule 60 (Expr)
    _plus             [reduce using rule 69 (Expr)]
    _minus            reduce using rule 60 (Expr)
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 60 (Expr)
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 60 (Expr)
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 60 (Expr)
    _mod              [reduce using rule 69 (Expr)]
    _less             [reduce using rule 69 (Expr)]
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 60 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            [reduce using rule 69 (Expr)]
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 60 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 60 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 60 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 60 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 60 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 60 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 60 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 60 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 60 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 60 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 60 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 60 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 60 (Expr)


State 131

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .
   70     | _not Expr .

    _less           shift, and go to state 144
    _lessequal      shift, and go to state 145
    _greater        shift, and go to state 146
    _greatereequal  shift, and go to state 147
    _equal          shift, and go to state 148
    _notequal       shift, and go to state 149
    _and            shift, and go to state 150
    _or             shift, and go to state 151

    _break            reduce using rule 69 (Expr)
    _break            [reduce using rule 70 (Expr)]
    _for              reduce using rule 69 (Expr)
    _for              [reduce using rule 70 (Expr)]
    _if               reduce using rule 69 (Expr)
    _if               [reduce using rule 70 (Expr)]
    _newarray         reduce using rule 69 (Expr)
    _newarray         [reduce using rule 70 (Expr)]
    _println          reduce using rule 69 (Expr)
    _println          [reduce using rule 70 (Expr)]
    _readln           reduce using rule 69 (Expr)
    _readln           [reduce using rule 70 (Expr)]
    _return           reduce using rule 69 (Expr)
    _return           [reduce using rule 70 (Expr)]
    _while            reduce using rule 69 (Expr)
    _while            [reduce using rule 70 (Expr)]
    _plus             reduce using rule 69 (Expr)
    _plus             [reduce using rule 70 (Expr)]
    _minus            reduce using rule 69 (Expr)
    _minus            [reduce using rule 70 (Expr)]
    _multiplication   reduce using rule 69 (Expr)
    _multiplication   [reduce using rule 70 (Expr)]
    _division         reduce using rule 69 (Expr)
    _division         [reduce using rule 70 (Expr)]
    _mod              reduce using rule 69 (Expr)
    _mod              [reduce using rule 70 (Expr)]
    _less             [reduce using rule 69 (Expr)]
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 70 (Expr)]
    _equal            [reduce using rule 69 (Expr)]
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 69 (Expr)
    _not              [reduce using rule 70 (Expr)]
    _semicolon        reduce using rule 69 (Expr)
    _semicolon        [reduce using rule 70 (Expr)]
    _comma            reduce using rule 69 (Expr)
    _comma            [reduce using rule 70 (Expr)]
    _leftparen        reduce using rule 69 (Expr)
    _leftparen        [reduce using rule 70 (Expr)]
    _rightparen       reduce using rule 69 (Expr)
    _rightparen       [reduce using rule 70 (Expr)]
    _rightbracket     reduce using rule 69 (Expr)
    _rightbracket     [reduce using rule 70 (Expr)]
    _leftbrace        reduce using rule 69 (Expr)
    _leftbrace        [reduce using rule 70 (Expr)]
    _intconstant      reduce using rule 69 (Expr)
    _intconstant      [reduce using rule 70 (Expr)]
    _doubleconstant   reduce using rule 69 (Expr)
    _doubleconstant   [reduce using rule 70 (Expr)]
    _stringconstant   reduce using rule 69 (Expr)
    _stringconstant   [reduce using rule 70 (Expr)]
    _booleanconstant  reduce using rule 69 (Expr)
    _booleanconstant  [reduce using rule 70 (Expr)]
    _id               reduce using rule 69 (Expr)
    _id               [reduce using rule 70 (Expr)]
    $default          reduce using rule 69 (Expr)


State 132

   54 Expr: _leftparen Expr . _rightparen
   55     | Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _plus            shift, and go to state 139
    _minus           shift, and go to state 140
    _multiplication  shift, and go to state 141
    _division        shift, and go to state 142
    _mod             shift, and go to state 143
    _less            shift, and go to state 144
    _lessequal       shift, and go to state 145
    _greater         shift, and go to state 146
    _greatereequal   shift, and go to state 147
    _equal           shift, and go to state 148
    _notequal        shift, and go to state 149
    _and             shift, and go to state 150
    _or              shift, and go to state 151
    _rightparen      shift, and go to state 167

    _plus            [reduce using rule 69 (Expr)]
    _minus           [reduce using rule 69 (Expr)]
    _multiplication  [reduce using rule 69 (Expr)]
    _division        [reduce using rule 69 (Expr)]
    _mod             [reduce using rule 69 (Expr)]
    _less            [reduce using rule 69 (Expr)]
    _lessequal       [reduce using rule 69 (Expr)]
    _greater         [reduce using rule 69 (Expr)]
    _greatereequal   [reduce using rule 69 (Expr)]
    _equal           [reduce using rule 69 (Expr)]
    _notequal        [reduce using rule 69 (Expr)]
    _and             [reduce using rule 69 (Expr)]
    _or              [reduce using rule 69 (Expr)]
    _rightparen      [reduce using rule 69 (Expr)]


State 133

   77 Call: _id _period . _id _leftparen Actuals _rightparen

    _id  shift, and go to state 168


State 134

   76 Call: _id _leftparen . Actuals _rightparen

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    $default  reduce using rule 80 (Actuals)

    Expr      go to state 169
    Lvalue    go to state 115
    Call      go to state 116
    Actuals   go to state 170
    Constant  go to state 117


State 135

   29 StmtBlock: _leftbrace VariableDecl Stmt _rightbrace . _semicolon

    _semicolon  shift, and go to state 171


State 136

   34 Stmt: BreakStmt _semicolon .

    $default  reduce using rule 34 (Stmt)


State 137

   35 Stmt: ReturnStmt _semicolon .

    $default  reduce using rule 35 (Stmt)


State 138

   36 Stmt: PrintStmt _semicolon .

    $default  reduce using rule 36 (Stmt)


State 139

   55 Expr: Expr _plus . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 172
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 140

   56 Expr: Expr _minus . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 173
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 141

   57 Expr: Expr _multiplication . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 174
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 142

   58 Expr: Expr _division . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 175
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 143

   59 Expr: Expr _mod . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 176
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 144

   61 Expr: Expr _less . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 177
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 145

   62 Expr: Expr _lessequal . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 178
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 146

   63 Expr: Expr _greater . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 179
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 147

   64 Expr: Expr _greatereequal . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 180
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 148

   65 Expr: Expr _equal . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 181
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 149

   66 Expr: Expr _notequal . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 182
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 150

   67 Expr: Expr _and . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 183
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 151

   68 Expr: Expr _or . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 184
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 152

   30 Stmt: Expr _semicolon .

    $default  reduce using rule 30 (Stmt)


State 153

   50 Expr: Lvalue _assignop . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 185
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 154

   75 Lvalue: Lvalue _period . _id

    _id  shift, and go to state 186


State 155

   74 Lvalue: Lvalue _leftbracket . Expr _rightbracket

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 187
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 156

   21 ClassDecl: _class _id _extends _id _implements ClassIds _leftbrace Field _rightbrace ';' .

    $default  reduce using rule 21 (ClassDecl)


State 157

   41 ForStmt: _for _leftparen ForExpr . _semicolon Expr _semicolon ForExpr _rightparen Stmt

    _semicolon  shift, and go to state 188


State 158

   42 ForExpr: Expr .
   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _plus            shift, and go to state 139
    _minus           shift, and go to state 140
    _multiplication  shift, and go to state 141
    _division        shift, and go to state 142
    _mod             shift, and go to state 143
    _less            shift, and go to state 144
    _lessequal       shift, and go to state 145
    _greater         shift, and go to state 146
    _greatereequal   shift, and go to state 147
    _equal           shift, and go to state 148
    _notequal        shift, and go to state 149
    _and             shift, and go to state 150
    _or              shift, and go to state 151

    _plus            [reduce using rule 69 (Expr)]
    _minus           [reduce using rule 69 (Expr)]
    _multiplication  [reduce using rule 69 (Expr)]
    _division        [reduce using rule 69 (Expr)]
    _mod             [reduce using rule 69 (Expr)]
    _less            [reduce using rule 69 (Expr)]
    _lessequal       [reduce using rule 69 (Expr)]
    _greater         [reduce using rule 69 (Expr)]
    _greatereequal   [reduce using rule 69 (Expr)]
    _equal           [reduce using rule 69 (Expr)]
    _notequal        [reduce using rule 69 (Expr)]
    _and             [reduce using rule 69 (Expr)]
    _or              [reduce using rule 69 (Expr)]
    _semicolon       reduce using rule 42 (ForExpr)
    _semicolon       [reduce using rule 69 (Expr)]
    _rightparen      reduce using rule 42 (ForExpr)
    _rightparen      [reduce using rule 69 (Expr)]
    $default         reduce using rule 42 (ForExpr)


State 159

   56 Expr: Expr _minus . Expr
   60     | _minus . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 189
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 160

   38 IfStmt: _if Expr Stmt . _else Stmt
   39       | _if Expr Stmt .

    _else  shift, and go to state 190

    _else     [reduce using rule 39 (IfStmt)]
    $default  reduce using rule 39 (IfStmt)


State 161

   72 Expr: _newarray _leftparen _intconstant . _comma Type _rightparen

    _comma  shift, and go to state 191


State 162

   47 PrintStmt: _println _leftparen PrintEnc . _rightparen _semicolon
   49 PrintEnc: PrintEnc . _comma Expr

    _comma       shift, and go to state 192
    _rightparen  shift, and go to state 193


State 163

   48 PrintEnc: Expr .
   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _plus            shift, and go to state 139
    _minus           shift, and go to state 140
    _multiplication  shift, and go to state 141
    _division        shift, and go to state 142
    _mod             shift, and go to state 143
    _less            shift, and go to state 144
    _lessequal       shift, and go to state 145
    _greater         shift, and go to state 146
    _greatereequal   shift, and go to state 147
    _equal           shift, and go to state 148
    _notequal        shift, and go to state 149
    _and             shift, and go to state 150
    _or              shift, and go to state 151

    _plus            [reduce using rule 69 (Expr)]
    _minus           [reduce using rule 69 (Expr)]
    _multiplication  [reduce using rule 69 (Expr)]
    _division        [reduce using rule 69 (Expr)]
    _mod             [reduce using rule 69 (Expr)]
    _less            [reduce using rule 69 (Expr)]
    _lessequal       [reduce using rule 69 (Expr)]
    _greater         [reduce using rule 69 (Expr)]
    _greatereequal   [reduce using rule 69 (Expr)]
    _equal           [reduce using rule 69 (Expr)]
    _notequal        [reduce using rule 69 (Expr)]
    _and             [reduce using rule 69 (Expr)]
    _or              [reduce using rule 69 (Expr)]
    _comma           reduce using rule 48 (PrintEnc)
    _comma           [reduce using rule 69 (Expr)]
    _rightparen      reduce using rule 48 (PrintEnc)
    _rightparen      [reduce using rule 69 (Expr)]
    $default         reduce using rule 48 (PrintEnc)


State 164

   71 Expr: _readln _leftparen _rightparen .

    $default  reduce using rule 71 (Expr)


State 165

   45 ReturnStmt: _return Expr _semicolon .

    $default  reduce using rule 45 (ReturnStmt)


State 166

   40 WhileStmt: _while _leftparen Expr . _rightparen Stmt
   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _plus            shift, and go to state 139
    _minus           shift, and go to state 140
    _multiplication  shift, and go to state 141
    _division        shift, and go to state 142
    _mod             shift, and go to state 143
    _less            shift, and go to state 144
    _lessequal       shift, and go to state 145
    _greater         shift, and go to state 146
    _greatereequal   shift, and go to state 147
    _equal           shift, and go to state 148
    _notequal        shift, and go to state 149
    _and             shift, and go to state 150
    _or              shift, and go to state 151
    _rightparen      shift, and go to state 194

    _plus            [reduce using rule 69 (Expr)]
    _minus           [reduce using rule 69 (Expr)]
    _multiplication  [reduce using rule 69 (Expr)]
    _division        [reduce using rule 69 (Expr)]
    _mod             [reduce using rule 69 (Expr)]
    _less            [reduce using rule 69 (Expr)]
    _lessequal       [reduce using rule 69 (Expr)]
    _greater         [reduce using rule 69 (Expr)]
    _greatereequal   [reduce using rule 69 (Expr)]
    _equal           [reduce using rule 69 (Expr)]
    _notequal        [reduce using rule 69 (Expr)]
    _and             [reduce using rule 69 (Expr)]
    _or              [reduce using rule 69 (Expr)]
    _rightparen      [reduce using rule 69 (Expr)]


State 167

   54 Expr: _leftparen Expr _rightparen .

    $default  reduce using rule 54 (Expr)


State 168

   77 Call: _id _period _id . _leftparen Actuals _rightparen

    _leftparen  shift, and go to state 195


State 169

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .
   78 Actuals: Expr .

    _plus            shift, and go to state 139
    _minus           shift, and go to state 140
    _multiplication  shift, and go to state 141
    _division        shift, and go to state 142
    _mod             shift, and go to state 143
    _less            shift, and go to state 144
    _lessequal       shift, and go to state 145
    _greater         shift, and go to state 146
    _greatereequal   shift, and go to state 147
    _equal           shift, and go to state 148
    _notequal        shift, and go to state 149
    _and             shift, and go to state 150
    _or              shift, and go to state 151

    _plus            [reduce using rule 69 (Expr)]
    _minus           [reduce using rule 69 (Expr)]
    _multiplication  [reduce using rule 69 (Expr)]
    _division        [reduce using rule 69 (Expr)]
    _mod             [reduce using rule 69 (Expr)]
    _less            [reduce using rule 69 (Expr)]
    _lessequal       [reduce using rule 69 (Expr)]
    _greater         [reduce using rule 69 (Expr)]
    _greatereequal   [reduce using rule 69 (Expr)]
    _equal           [reduce using rule 69 (Expr)]
    _notequal        [reduce using rule 69 (Expr)]
    _and             [reduce using rule 69 (Expr)]
    _or              [reduce using rule 69 (Expr)]
    _comma           reduce using rule 69 (Expr)
    _comma           [reduce using rule 78 (Actuals)]
    _rightparen      reduce using rule 69 (Expr)
    _rightparen      [reduce using rule 78 (Actuals)]
    $default         reduce using rule 69 (Expr)


State 170

   76 Call: _id _leftparen Actuals . _rightparen
   79 Actuals: Actuals . _comma Expr

    _comma       shift, and go to state 196
    _rightparen  shift, and go to state 197


State 171

   29 StmtBlock: _leftbrace VariableDecl Stmt _rightbrace _semicolon .

    $default  reduce using rule 29 (StmtBlock)


State 172

   55 Expr: Expr . _plus Expr
   55     | Expr _plus Expr .
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _less           shift, and go to state 144
    _lessequal      shift, and go to state 145
    _greater        shift, and go to state 146
    _greatereequal  shift, and go to state 147
    _equal          shift, and go to state 148
    _notequal       shift, and go to state 149
    _and            shift, and go to state 150
    _or             shift, and go to state 151

    _break            reduce using rule 55 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 55 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 55 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 55 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 55 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 55 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 55 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 55 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             reduce using rule 55 (Expr)
    _plus             [reduce using rule 69 (Expr)]
    _minus            reduce using rule 55 (Expr)
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 55 (Expr)
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 55 (Expr)
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 55 (Expr)
    _mod              [reduce using rule 69 (Expr)]
    _less             [reduce using rule 69 (Expr)]
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 55 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            [reduce using rule 69 (Expr)]
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 55 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 55 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 55 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 55 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 55 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 55 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 55 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 55 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 55 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 55 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 55 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 55 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 55 (Expr)


State 173

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   56     | Expr _minus Expr .
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _less           shift, and go to state 144
    _lessequal      shift, and go to state 145
    _greater        shift, and go to state 146
    _greatereequal  shift, and go to state 147
    _equal          shift, and go to state 148
    _notequal       shift, and go to state 149
    _and            shift, and go to state 150
    _or             shift, and go to state 151

    _break            reduce using rule 56 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 56 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 56 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 56 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 56 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 56 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 56 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 56 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             reduce using rule 56 (Expr)
    _plus             [reduce using rule 69 (Expr)]
    _minus            reduce using rule 56 (Expr)
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 56 (Expr)
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 56 (Expr)
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 56 (Expr)
    _mod              [reduce using rule 69 (Expr)]
    _less             [reduce using rule 69 (Expr)]
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 56 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            [reduce using rule 69 (Expr)]
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 56 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 56 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 56 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 56 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 56 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 56 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 56 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 56 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 56 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 56 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 56 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 56 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 56 (Expr)


State 174

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   57     | Expr _multiplication Expr .
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _plus           shift, and go to state 139
    _minus          shift, and go to state 140
    _less           shift, and go to state 144
    _lessequal      shift, and go to state 145
    _greater        shift, and go to state 146
    _greatereequal  shift, and go to state 147
    _equal          shift, and go to state 148
    _notequal       shift, and go to state 149
    _and            shift, and go to state 150
    _or             shift, and go to state 151

    _break            reduce using rule 57 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 57 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 57 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 57 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 57 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 57 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 57 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 57 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             [reduce using rule 69 (Expr)]
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 57 (Expr)
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 57 (Expr)
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 57 (Expr)
    _mod              [reduce using rule 69 (Expr)]
    _less             [reduce using rule 69 (Expr)]
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 57 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            [reduce using rule 69 (Expr)]
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 57 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 57 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 57 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 57 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 57 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 57 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 57 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 57 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 57 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 57 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 57 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 57 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 57 (Expr)


State 175

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   58     | Expr _division Expr .
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _plus           shift, and go to state 139
    _minus          shift, and go to state 140
    _less           shift, and go to state 144
    _lessequal      shift, and go to state 145
    _greater        shift, and go to state 146
    _greatereequal  shift, and go to state 147
    _equal          shift, and go to state 148
    _notequal       shift, and go to state 149
    _and            shift, and go to state 150
    _or             shift, and go to state 151

    _break            reduce using rule 58 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 58 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 58 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 58 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 58 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 58 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 58 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 58 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             [reduce using rule 69 (Expr)]
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 58 (Expr)
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 58 (Expr)
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 58 (Expr)
    _mod              [reduce using rule 69 (Expr)]
    _less             [reduce using rule 69 (Expr)]
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 58 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            [reduce using rule 69 (Expr)]
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 58 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 58 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 58 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 58 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 58 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 58 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 58 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 58 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 58 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 58 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 58 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 58 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 58 (Expr)


State 176

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   59     | Expr _mod Expr .
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _plus           shift, and go to state 139
    _minus          shift, and go to state 140
    _less           shift, and go to state 144
    _lessequal      shift, and go to state 145
    _greater        shift, and go to state 146
    _greatereequal  shift, and go to state 147
    _equal          shift, and go to state 148
    _notequal       shift, and go to state 149
    _and            shift, and go to state 150
    _or             shift, and go to state 151

    _break            reduce using rule 59 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 59 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 59 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 59 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 59 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 59 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 59 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 59 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             [reduce using rule 69 (Expr)]
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 59 (Expr)
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 59 (Expr)
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 59 (Expr)
    _mod              [reduce using rule 69 (Expr)]
    _less             [reduce using rule 69 (Expr)]
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 59 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            [reduce using rule 69 (Expr)]
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 59 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 59 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 59 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 59 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 59 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 59 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 59 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 59 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 59 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 59 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 59 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 59 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 59 (Expr)


State 177

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   61     | Expr _less Expr .
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _greatereequal  shift, and go to state 147
    _equal          shift, and go to state 148
    _notequal       shift, and go to state 149
    _and            shift, and go to state 150
    _or             shift, and go to state 151

    _break            reduce using rule 61 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 61 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 61 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 61 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 61 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 61 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 61 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 61 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             reduce using rule 61 (Expr)
    _plus             [reduce using rule 69 (Expr)]
    _minus            reduce using rule 61 (Expr)
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 61 (Expr)
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 61 (Expr)
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 61 (Expr)
    _mod              [reduce using rule 69 (Expr)]
    _less             reduce using rule 61 (Expr)
    _less             [reduce using rule 69 (Expr)]
    _lessequal        reduce using rule 61 (Expr)
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          reduce using rule 61 (Expr)
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 61 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            [reduce using rule 69 (Expr)]
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 61 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 61 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 61 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 61 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 61 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 61 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 61 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 61 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 61 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 61 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 61 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 61 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 61 (Expr)


State 178

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   62     | Expr _lessequal Expr .
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _greatereequal  shift, and go to state 147
    _equal          shift, and go to state 148
    _notequal       shift, and go to state 149
    _and            shift, and go to state 150
    _or             shift, and go to state 151

    _break            reduce using rule 62 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 62 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 62 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 62 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 62 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 62 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 62 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 62 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             reduce using rule 62 (Expr)
    _plus             [reduce using rule 69 (Expr)]
    _minus            reduce using rule 62 (Expr)
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 62 (Expr)
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 62 (Expr)
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 62 (Expr)
    _mod              [reduce using rule 69 (Expr)]
    _less             reduce using rule 62 (Expr)
    _less             [reduce using rule 69 (Expr)]
    _lessequal        reduce using rule 62 (Expr)
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          reduce using rule 62 (Expr)
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 62 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            [reduce using rule 69 (Expr)]
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 62 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 62 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 62 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 62 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 62 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 62 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 62 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 62 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 62 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 62 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 62 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 62 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 62 (Expr)


State 179

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   63     | Expr _greater Expr .
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _greatereequal  shift, and go to state 147
    _equal          shift, and go to state 148
    _notequal       shift, and go to state 149
    _and            shift, and go to state 150
    _or             shift, and go to state 151

    _break            reduce using rule 63 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 63 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 63 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 63 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 63 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 63 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 63 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 63 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             reduce using rule 63 (Expr)
    _plus             [reduce using rule 69 (Expr)]
    _minus            reduce using rule 63 (Expr)
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 63 (Expr)
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 63 (Expr)
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 63 (Expr)
    _mod              [reduce using rule 69 (Expr)]
    _less             reduce using rule 63 (Expr)
    _less             [reduce using rule 69 (Expr)]
    _lessequal        reduce using rule 63 (Expr)
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          reduce using rule 63 (Expr)
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 63 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            [reduce using rule 69 (Expr)]
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 63 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 63 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 63 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 63 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 63 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 63 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 63 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 63 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 63 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 63 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 63 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 63 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 63 (Expr)


State 180

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   64     | Expr _greatereequal Expr .
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _plus            shift, and go to state 139
    _minus           shift, and go to state 140
    _multiplication  shift, and go to state 141
    _division        shift, and go to state 142
    _mod             shift, and go to state 143
    _less            shift, and go to state 144
    _lessequal       shift, and go to state 145
    _greater         shift, and go to state 146
    _greatereequal   shift, and go to state 147
    _equal           shift, and go to state 148
    _notequal        shift, and go to state 149
    _and             shift, and go to state 150
    _or              shift, and go to state 151

    _break            reduce using rule 64 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 64 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 64 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 64 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 64 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 64 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 64 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 64 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             [reduce using rule 64 (Expr)]
    _plus             [reduce using rule 69 (Expr)]
    _minus            [reduce using rule 64 (Expr)]
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   [reduce using rule 64 (Expr)]
    _multiplication   [reduce using rule 69 (Expr)]
    _division         [reduce using rule 64 (Expr)]
    _division         [reduce using rule 69 (Expr)]
    _mod              [reduce using rule 64 (Expr)]
    _mod              [reduce using rule 69 (Expr)]
    _less             [reduce using rule 64 (Expr)]
    _less             [reduce using rule 69 (Expr)]
    _lessequal        [reduce using rule 64 (Expr)]
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          [reduce using rule 64 (Expr)]
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 64 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            [reduce using rule 64 (Expr)]
    _equal            [reduce using rule 69 (Expr)]
    _notequal         [reduce using rule 64 (Expr)]
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 64 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 64 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 64 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 64 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 64 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 64 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 64 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 64 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 64 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 64 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 64 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 64 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 64 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 64 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 64 (Expr)


State 181

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   65     | Expr _equal Expr .
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _greatereequal  shift, and go to state 147
    _and            shift, and go to state 150
    _or             shift, and go to state 151

    _break            reduce using rule 65 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 65 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 65 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 65 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 65 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 65 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 65 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 65 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             reduce using rule 65 (Expr)
    _plus             [reduce using rule 69 (Expr)]
    _minus            reduce using rule 65 (Expr)
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 65 (Expr)
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 65 (Expr)
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 65 (Expr)
    _mod              [reduce using rule 69 (Expr)]
    _less             reduce using rule 65 (Expr)
    _less             [reduce using rule 69 (Expr)]
    _lessequal        reduce using rule 65 (Expr)
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          reduce using rule 65 (Expr)
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 65 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            reduce using rule 65 (Expr)
    _equal            [reduce using rule 69 (Expr)]
    _notequal         reduce using rule 65 (Expr)
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 65 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 65 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 65 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 65 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 65 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 65 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 65 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 65 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 65 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 65 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 65 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 65 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 65 (Expr)


State 182

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   66     | Expr _notequal Expr .
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _greatereequal  shift, and go to state 147
    _and            shift, and go to state 150
    _or             shift, and go to state 151

    _break            reduce using rule 66 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 66 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 66 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 66 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 66 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 66 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 66 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 66 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             reduce using rule 66 (Expr)
    _plus             [reduce using rule 69 (Expr)]
    _minus            reduce using rule 66 (Expr)
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 66 (Expr)
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 66 (Expr)
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 66 (Expr)
    _mod              [reduce using rule 69 (Expr)]
    _less             reduce using rule 66 (Expr)
    _less             [reduce using rule 69 (Expr)]
    _lessequal        reduce using rule 66 (Expr)
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          reduce using rule 66 (Expr)
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 66 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            reduce using rule 66 (Expr)
    _equal            [reduce using rule 69 (Expr)]
    _notequal         reduce using rule 66 (Expr)
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 66 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 66 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 66 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 66 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 66 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 66 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 66 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 66 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 66 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 66 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 66 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 66 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 66 (Expr)


State 183

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   67     | Expr _and Expr .
   68     | Expr . _or Expr
   69     | Expr .

    _greatereequal  shift, and go to state 147
    _or             shift, and go to state 151

    _break            reduce using rule 67 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 67 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 67 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 67 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 67 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 67 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 67 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 67 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             reduce using rule 67 (Expr)
    _plus             [reduce using rule 69 (Expr)]
    _minus            reduce using rule 67 (Expr)
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 67 (Expr)
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 67 (Expr)
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 67 (Expr)
    _mod              [reduce using rule 69 (Expr)]
    _less             reduce using rule 67 (Expr)
    _less             [reduce using rule 69 (Expr)]
    _lessequal        reduce using rule 67 (Expr)
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          reduce using rule 67 (Expr)
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 67 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            reduce using rule 67 (Expr)
    _equal            [reduce using rule 69 (Expr)]
    _notequal         reduce using rule 67 (Expr)
    _notequal         [reduce using rule 69 (Expr)]
    _and              reduce using rule 67 (Expr)
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 67 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 67 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 67 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 67 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 67 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 67 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 67 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 67 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 67 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 67 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 67 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 67 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 67 (Expr)


State 184

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   68     | Expr _or Expr .
   69     | Expr .

    _greatereequal  shift, and go to state 147

    _break            reduce using rule 68 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 68 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 68 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 68 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 68 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 68 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 68 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 68 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             reduce using rule 68 (Expr)
    _plus             [reduce using rule 69 (Expr)]
    _minus            reduce using rule 68 (Expr)
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 68 (Expr)
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 68 (Expr)
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 68 (Expr)
    _mod              [reduce using rule 69 (Expr)]
    _less             reduce using rule 68 (Expr)
    _less             [reduce using rule 69 (Expr)]
    _lessequal        reduce using rule 68 (Expr)
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          reduce using rule 68 (Expr)
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 68 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            reduce using rule 68 (Expr)
    _equal            [reduce using rule 69 (Expr)]
    _notequal         reduce using rule 68 (Expr)
    _notequal         [reduce using rule 69 (Expr)]
    _and              reduce using rule 68 (Expr)
    _and              [reduce using rule 69 (Expr)]
    _or               reduce using rule 68 (Expr)
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 68 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 68 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 68 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 68 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 68 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 68 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 68 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 68 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 68 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 68 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 68 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 68 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 68 (Expr)


State 185

   50 Expr: Lvalue _assignop Expr .
   55     | Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _greatereequal  shift, and go to state 147

    _break            reduce using rule 50 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 50 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 50 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 50 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 50 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 50 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 50 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 50 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             reduce using rule 50 (Expr)
    _plus             [reduce using rule 69 (Expr)]
    _minus            reduce using rule 50 (Expr)
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 50 (Expr)
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 50 (Expr)
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 50 (Expr)
    _mod              [reduce using rule 69 (Expr)]
    _less             reduce using rule 50 (Expr)
    _less             [reduce using rule 69 (Expr)]
    _lessequal        reduce using rule 50 (Expr)
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          reduce using rule 50 (Expr)
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 50 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            reduce using rule 50 (Expr)
    _equal            [reduce using rule 69 (Expr)]
    _notequal         reduce using rule 50 (Expr)
    _notequal         [reduce using rule 69 (Expr)]
    _and              reduce using rule 50 (Expr)
    _and              [reduce using rule 69 (Expr)]
    _or               reduce using rule 50 (Expr)
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 50 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 50 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _comma            reduce using rule 50 (Expr)
    _comma            [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 50 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _rightparen       reduce using rule 50 (Expr)
    _rightparen       [reduce using rule 69 (Expr)]
    _rightbracket     reduce using rule 50 (Expr)
    _rightbracket     [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 50 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 50 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 50 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 50 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 50 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 50 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 50 (Expr)


State 186

   75 Lvalue: Lvalue _period _id .

    $default  reduce using rule 75 (Lvalue)


State 187

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .
   74 Lvalue: Lvalue _leftbracket Expr . _rightbracket

    _plus            shift, and go to state 139
    _minus           shift, and go to state 140
    _multiplication  shift, and go to state 141
    _division        shift, and go to state 142
    _mod             shift, and go to state 143
    _less            shift, and go to state 144
    _lessequal       shift, and go to state 145
    _greater         shift, and go to state 146
    _greatereequal   shift, and go to state 147
    _equal           shift, and go to state 148
    _notequal        shift, and go to state 149
    _and             shift, and go to state 150
    _or              shift, and go to state 151
    _rightbracket    shift, and go to state 198

    _plus            [reduce using rule 69 (Expr)]
    _minus           [reduce using rule 69 (Expr)]
    _multiplication  [reduce using rule 69 (Expr)]
    _division        [reduce using rule 69 (Expr)]
    _mod             [reduce using rule 69 (Expr)]
    _less            [reduce using rule 69 (Expr)]
    _lessequal       [reduce using rule 69 (Expr)]
    _greater         [reduce using rule 69 (Expr)]
    _greatereequal   [reduce using rule 69 (Expr)]
    _equal           [reduce using rule 69 (Expr)]
    _notequal        [reduce using rule 69 (Expr)]
    _and             [reduce using rule 69 (Expr)]
    _or              [reduce using rule 69 (Expr)]
    _rightbracket    [reduce using rule 69 (Expr)]


State 188

   41 ForStmt: _for _leftparen ForExpr _semicolon . Expr _semicolon ForExpr _rightparen Stmt

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 199
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 189

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   56     | Expr _minus Expr .
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   60     | _minus Expr .
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _less           shift, and go to state 144
    _lessequal      shift, and go to state 145
    _greater        shift, and go to state 146
    _greatereequal  shift, and go to state 147
    _equal          shift, and go to state 148
    _notequal       shift, and go to state 149
    _and            shift, and go to state 150
    _or             shift, and go to state 151

    _break            reduce using rule 56 (Expr)
    _break            [reduce using rule 69 (Expr)]
    _for              reduce using rule 56 (Expr)
    _for              [reduce using rule 69 (Expr)]
    _if               reduce using rule 56 (Expr)
    _if               [reduce using rule 69 (Expr)]
    _newarray         reduce using rule 56 (Expr)
    _newarray         [reduce using rule 69 (Expr)]
    _println          reduce using rule 56 (Expr)
    _println          [reduce using rule 69 (Expr)]
    _readln           reduce using rule 56 (Expr)
    _readln           [reduce using rule 69 (Expr)]
    _return           reduce using rule 56 (Expr)
    _return           [reduce using rule 69 (Expr)]
    _while            reduce using rule 56 (Expr)
    _while            [reduce using rule 69 (Expr)]
    _plus             reduce using rule 56 (Expr)
    _plus             [reduce using rule 60 (Expr)]
    _plus             [reduce using rule 69 (Expr)]
    _minus            reduce using rule 56 (Expr)
    _minus            [reduce using rule 60 (Expr)]
    _minus            [reduce using rule 69 (Expr)]
    _multiplication   reduce using rule 56 (Expr)
    _multiplication   [reduce using rule 60 (Expr)]
    _multiplication   [reduce using rule 69 (Expr)]
    _division         reduce using rule 56 (Expr)
    _division         [reduce using rule 60 (Expr)]
    _division         [reduce using rule 69 (Expr)]
    _mod              reduce using rule 56 (Expr)
    _mod              [reduce using rule 60 (Expr)]
    _mod              [reduce using rule 69 (Expr)]
    _less             [reduce using rule 69 (Expr)]
    _lessequal        [reduce using rule 69 (Expr)]
    _greater          [reduce using rule 69 (Expr)]
    _greatereequal    [reduce using rule 56 (Expr)]
    _greatereequal    [reduce using rule 60 (Expr)]
    _greatereequal    [reduce using rule 69 (Expr)]
    _equal            [reduce using rule 69 (Expr)]
    _notequal         [reduce using rule 69 (Expr)]
    _and              [reduce using rule 69 (Expr)]
    _or               [reduce using rule 69 (Expr)]
    _not              reduce using rule 56 (Expr)
    _not              [reduce using rule 69 (Expr)]
    _semicolon        reduce using rule 60 (Expr)
    _semicolon        [reduce using rule 69 (Expr)]
    _leftparen        reduce using rule 56 (Expr)
    _leftparen        [reduce using rule 69 (Expr)]
    _leftbrace        reduce using rule 56 (Expr)
    _leftbrace        [reduce using rule 69 (Expr)]
    _intconstant      reduce using rule 56 (Expr)
    _intconstant      [reduce using rule 69 (Expr)]
    _doubleconstant   reduce using rule 56 (Expr)
    _doubleconstant   [reduce using rule 69 (Expr)]
    _stringconstant   reduce using rule 56 (Expr)
    _stringconstant   [reduce using rule 69 (Expr)]
    _booleanconstant  reduce using rule 56 (Expr)
    _booleanconstant  [reduce using rule 69 (Expr)]
    _id               reduce using rule 56 (Expr)
    _id               [reduce using rule 69 (Expr)]
    $default          reduce using rule 56 (Expr)


State 190

   38 IfStmt: _if Expr Stmt _else . Stmt

    _break            shift, and go to state 90
    _for              shift, and go to state 91
    _if               shift, and go to state 92
    _newarray         shift, and go to state 93
    _println          shift, and go to state 94
    _readln           shift, and go to state 95
    _return           shift, and go to state 96
    _while            shift, and go to state 97
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _leftbrace        shift, and go to state 75
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    StmtBlock   go to state 106
    Stmt        go to state 200
    IfStmt      go to state 108
    WhileStmt   go to state 109
    ForStmt     go to state 110
    BreakStmt   go to state 111
    ReturnStmt  go to state 112
    PrintStmt   go to state 113
    Expr        go to state 114
    Lvalue      go to state 115
    Call        go to state 116
    Constant    go to state 117


State 191

   72 Expr: _newarray _leftparen _intconstant _comma . Type _rightparen

    _boolean  shift, and go to state 1
    _double   shift, and go to state 3
    _int      shift, and go to state 4
    _string   shift, and go to state 6
    _id       shift, and go to state 8

    Type  go to state 201


State 192

   49 PrintEnc: PrintEnc _comma . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 202
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 193

   47 PrintStmt: _println _leftparen PrintEnc _rightparen . _semicolon

    _semicolon  shift, and go to state 203


State 194

   40 WhileStmt: _while _leftparen Expr _rightparen . Stmt

    _break            shift, and go to state 90
    _for              shift, and go to state 91
    _if               shift, and go to state 92
    _newarray         shift, and go to state 93
    _println          shift, and go to state 94
    _readln           shift, and go to state 95
    _return           shift, and go to state 96
    _while            shift, and go to state 97
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _leftbrace        shift, and go to state 75
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    StmtBlock   go to state 106
    Stmt        go to state 204
    IfStmt      go to state 108
    WhileStmt   go to state 109
    ForStmt     go to state 110
    BreakStmt   go to state 111
    ReturnStmt  go to state 112
    PrintStmt   go to state 113
    Expr        go to state 114
    Lvalue      go to state 115
    Call        go to state 116
    Constant    go to state 117


State 195

   77 Call: _id _period _id _leftparen . Actuals _rightparen

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    $default  reduce using rule 80 (Actuals)

    Expr      go to state 169
    Lvalue    go to state 115
    Call      go to state 116
    Actuals   go to state 205
    Constant  go to state 117


State 196

   79 Actuals: Actuals _comma . Expr

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    Expr      go to state 206
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 197

   76 Call: _id _leftparen Actuals _rightparen .

    $default  reduce using rule 76 (Call)


State 198

   74 Lvalue: Lvalue _leftbracket Expr _rightbracket .

    $default  reduce using rule 74 (Lvalue)


State 199

   41 ForStmt: _for _leftparen ForExpr _semicolon Expr . _semicolon ForExpr _rightparen Stmt
   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _plus            shift, and go to state 139
    _minus           shift, and go to state 140
    _multiplication  shift, and go to state 141
    _division        shift, and go to state 142
    _mod             shift, and go to state 143
    _less            shift, and go to state 144
    _lessequal       shift, and go to state 145
    _greater         shift, and go to state 146
    _greatereequal   shift, and go to state 147
    _equal           shift, and go to state 148
    _notequal        shift, and go to state 149
    _and             shift, and go to state 150
    _or              shift, and go to state 151
    _semicolon       shift, and go to state 207

    _plus            [reduce using rule 69 (Expr)]
    _minus           [reduce using rule 69 (Expr)]
    _multiplication  [reduce using rule 69 (Expr)]
    _division        [reduce using rule 69 (Expr)]
    _mod             [reduce using rule 69 (Expr)]
    _less            [reduce using rule 69 (Expr)]
    _lessequal       [reduce using rule 69 (Expr)]
    _greater         [reduce using rule 69 (Expr)]
    _greatereequal   [reduce using rule 69 (Expr)]
    _equal           [reduce using rule 69 (Expr)]
    _notequal        [reduce using rule 69 (Expr)]
    _and             [reduce using rule 69 (Expr)]
    _or              [reduce using rule 69 (Expr)]
    _semicolon       [reduce using rule 69 (Expr)]


State 200

   38 IfStmt: _if Expr Stmt _else Stmt .

    $default  reduce using rule 38 (IfStmt)


State 201

   13 Type: Type . _leftbracket _rightbracket _semicolon
   72 Expr: _newarray _leftparen _intconstant _comma Type . _rightparen

    _rightparen   shift, and go to state 208
    _leftbracket  shift, and go to state 29


State 202

   49 PrintEnc: PrintEnc _comma Expr .
   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .

    _plus            shift, and go to state 139
    _minus           shift, and go to state 140
    _multiplication  shift, and go to state 141
    _division        shift, and go to state 142
    _mod             shift, and go to state 143
    _less            shift, and go to state 144
    _lessequal       shift, and go to state 145
    _greater         shift, and go to state 146
    _greatereequal   shift, and go to state 147
    _equal           shift, and go to state 148
    _notequal        shift, and go to state 149
    _and             shift, and go to state 150
    _or              shift, and go to state 151

    _plus            [reduce using rule 69 (Expr)]
    _minus           [reduce using rule 69 (Expr)]
    _multiplication  [reduce using rule 69 (Expr)]
    _division        [reduce using rule 69 (Expr)]
    _mod             [reduce using rule 69 (Expr)]
    _less            [reduce using rule 69 (Expr)]
    _lessequal       [reduce using rule 69 (Expr)]
    _greater         [reduce using rule 69 (Expr)]
    _greatereequal   [reduce using rule 69 (Expr)]
    _equal           [reduce using rule 69 (Expr)]
    _notequal        [reduce using rule 69 (Expr)]
    _and             [reduce using rule 69 (Expr)]
    _or              [reduce using rule 69 (Expr)]
    _comma           reduce using rule 49 (PrintEnc)
    _comma           [reduce using rule 69 (Expr)]
    _rightparen      reduce using rule 49 (PrintEnc)
    _rightparen      [reduce using rule 69 (Expr)]
    $default         reduce using rule 49 (PrintEnc)


State 203

   47 PrintStmt: _println _leftparen PrintEnc _rightparen _semicolon .

    $default  reduce using rule 47 (PrintStmt)


State 204

   40 WhileStmt: _while _leftparen Expr _rightparen Stmt .

    $default  reduce using rule 40 (WhileStmt)


State 205

   77 Call: _id _period _id _leftparen Actuals . _rightparen
   79 Actuals: Actuals . _comma Expr

    _comma       shift, and go to state 196
    _rightparen  shift, and go to state 209


State 206

   55 Expr: Expr . _plus Expr
   56     | Expr . _minus Expr
   57     | Expr . _multiplication Expr
   58     | Expr . _division Expr
   59     | Expr . _mod Expr
   61     | Expr . _less Expr
   62     | Expr . _lessequal Expr
   63     | Expr . _greater Expr
   64     | Expr . _greatereequal Expr
   65     | Expr . _equal Expr
   66     | Expr . _notequal Expr
   67     | Expr . _and Expr
   68     | Expr . _or Expr
   69     | Expr .
   79 Actuals: Actuals _comma Expr .

    _plus            shift, and go to state 139
    _minus           shift, and go to state 140
    _multiplication  shift, and go to state 141
    _division        shift, and go to state 142
    _mod             shift, and go to state 143
    _less            shift, and go to state 144
    _lessequal       shift, and go to state 145
    _greater         shift, and go to state 146
    _greatereequal   shift, and go to state 147
    _equal           shift, and go to state 148
    _notequal        shift, and go to state 149
    _and             shift, and go to state 150
    _or              shift, and go to state 151

    _plus            [reduce using rule 69 (Expr)]
    _minus           [reduce using rule 69 (Expr)]
    _multiplication  [reduce using rule 69 (Expr)]
    _division        [reduce using rule 69 (Expr)]
    _mod             [reduce using rule 69 (Expr)]
    _less            [reduce using rule 69 (Expr)]
    _lessequal       [reduce using rule 69 (Expr)]
    _greater         [reduce using rule 69 (Expr)]
    _greatereequal   [reduce using rule 69 (Expr)]
    _equal           [reduce using rule 69 (Expr)]
    _notequal        [reduce using rule 69 (Expr)]
    _and             [reduce using rule 69 (Expr)]
    _or              [reduce using rule 69 (Expr)]
    _comma           reduce using rule 69 (Expr)
    _comma           [reduce using rule 79 (Actuals)]
    _rightparen      reduce using rule 69 (Expr)
    _rightparen      [reduce using rule 79 (Actuals)]
    $default         reduce using rule 69 (Expr)


State 207

   41 ForStmt: _for _leftparen ForExpr _semicolon Expr _semicolon . ForExpr _rightparen Stmt

    _newarray         shift, and go to state 93
    _readln           shift, and go to state 95
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    $default  reduce using rule 43 (ForExpr)

    ForExpr   go to state 210
    Expr      go to state 158
    Lvalue    go to state 115
    Call      go to state 116
    Constant  go to state 117


State 208

   72 Expr: _newarray _leftparen _intconstant _comma Type _rightparen .

    $default  reduce using rule 72 (Expr)


State 209

   77 Call: _id _period _id _leftparen Actuals _rightparen .

    $default  reduce using rule 77 (Call)


State 210

   41 ForStmt: _for _leftparen ForExpr _semicolon Expr _semicolon ForExpr . _rightparen Stmt

    _rightparen  shift, and go to state 211


State 211

   41 ForStmt: _for _leftparen ForExpr _semicolon Expr _semicolon ForExpr _rightparen . Stmt

    _break            shift, and go to state 90
    _for              shift, and go to state 91
    _if               shift, and go to state 92
    _newarray         shift, and go to state 93
    _println          shift, and go to state 94
    _readln           shift, and go to state 95
    _return           shift, and go to state 96
    _while            shift, and go to state 97
    _minus            shift, and go to state 98
    _not              shift, and go to state 99
    _leftparen        shift, and go to state 100
    _leftbrace        shift, and go to state 75
    _intconstant      shift, and go to state 101
    _doubleconstant   shift, and go to state 102
    _stringconstant   shift, and go to state 103
    _booleanconstant  shift, and go to state 104
    _id               shift, and go to state 105

    StmtBlock   go to state 106
    Stmt        go to state 212
    IfStmt      go to state 108
    WhileStmt   go to state 109
    ForStmt     go to state 110
    BreakStmt   go to state 111
    ReturnStmt  go to state 112
    PrintStmt   go to state 113
    Expr        go to state 114
    Lvalue      go to state 115
    Call        go to state 116
    Constant    go to state 117


State 212

   41 ForStmt: _for _leftparen ForExpr _semicolon Expr _semicolon ForExpr _rightparen Stmt .

    $default  reduce using rule 41 (ForStmt)
